{"ast":null,"code":"var _jsxFileName = \"C:\\\\Training\\\\React-and-ASP.NET-Core\\\\Module 6 - Forms\\\\react-movies\\\\src\\\\movies\\\\MovieForm.tsx\";\nimport { Form, Formik } from \"formik\";\nimport * as Yup from 'yup';\nimport TextField from \"../forms/TextField\";\nimport DateField from \"../forms/DateField\";\nimport ImageField from \"../forms/ImageField\";\nimport Button from \"../utils/Button\";\nimport { Link } from \"react-router-dom\";\nimport CheckboxField from \"../forms/CheckboxField\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MovieForm(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: props.model,\n      onSubmit: props.onSubmit,\n      validationSchema: Yup.object({\n        title: Yup.string().required('This field is required.').firstLetterUppercase()\n      }),\n      children: formikProps => /*#__PURE__*/_jsxDEV(Form, {\n        placeholder: undefined,\n        onPointerEnterCapture: undefined,\n        onPointerLeaveCapture: undefined,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          displayName: \"Title\",\n          field: \"title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CheckboxField, {\n          displayName: \"In Theaters\",\n          field: \"inTheaters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          displayName: \"Trailer\",\n          field: \"trailer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(DateField, {\n          displayName: \"Release Date\",\n          field: \"releaseDate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ImageField, {\n          displayName: \"Poster\",\n          field: \"poster\",\n          imageURL: props.model.posterURL\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          disabled: formikProps.isSubmitting,\n          type: \"submit\",\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn btn-secondary\",\n          to: \"/genres\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_c = MovieForm;\nvar _c;\n$RefreshReg$(_c, \"MovieForm\");","map":{"version":3,"names":["Form","Formik","Yup","TextField","DateField","ImageField","Button","Link","CheckboxField","jsxDEV","_jsxDEV","Fragment","_Fragment","MovieForm","props","children","initialValues","model","onSubmit","validationSchema","object","title","string","required","firstLetterUppercase","formikProps","placeholder","undefined","onPointerEnterCapture","onPointerLeaveCapture","displayName","field","fileName","_jsxFileName","lineNumber","columnNumber","imageURL","posterURL","disabled","isSubmitting","type","className","to","_c","$RefreshReg$"],"sources":["C:/Training/React-and-ASP.NET-Core/Module 6 - Forms/react-movies/src/movies/MovieForm.tsx"],"sourcesContent":["import { Form, Formik, FormikHelpers } from \"formik\";\r\nimport { movieCreationDTO } from \"./movies.module\";\r\nimport * as Yup from 'yup'\r\nimport TextField from \"../forms/TextField\";\r\nimport DateField from \"../forms/DateField\";\r\nimport ImageField from \"../forms/ImageField\";\r\nimport Button from \"../utils/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CheckboxField from \"../forms/CheckboxField\";\r\n\r\nexport default function MovieForm(props: movieFormProps) {\r\n    return (\r\n        <>\r\n            <Formik\r\n                initialValues={props.model}\r\n                onSubmit={props.onSubmit}\r\n                validationSchema={Yup.object({\r\n                    title: Yup.string().required('This field is required.').firstLetterUppercase()\r\n                })}\r\n            >\r\n                {(formikProps) => (\r\n                    <Form placeholder={undefined} onPointerEnterCapture={undefined} onPointerLeaveCapture={undefined}>\r\n                        \r\n                        <TextField displayName=\"Title\" field=\"title\" />\r\n                        <CheckboxField displayName=\"In Theaters\" field=\"inTheaters\" />\r\n                        <TextField displayName=\"Trailer\" field=\"trailer\" />\r\n                        <DateField displayName=\"Release Date\" field=\"releaseDate\" />\r\n                        <ImageField displayName=\"Poster\" field=\"poster\"\r\n                            imageURL={props.model.posterURL}\r\n                        />\r\n\r\n                        <Button disabled={formikProps.isSubmitting}\r\n                            type='submit'>Save Changes</Button>\r\n                        <Link className=\"btn btn-secondary\" to=\"/genres\">Cancel</Link>\r\n\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n    )\r\n}\r\n\r\ninterface movieFormProps {\r\n    model: movieCreationDTO;\r\n    onSubmit(values: movieCreationDTO, actions: FormikHelpers<movieCreationDTO>): void\r\n}"],"mappings":";AAAA,SAASA,IAAI,EAAEC,MAAM,QAAuB,QAAQ;AAEpD,OAAO,KAAKC,GAAG,MAAM,KAAK;AAC1B,OAAOC,SAAS,MAAM,oBAAoB;AAC1C,OAAOC,SAAS,MAAM,oBAAoB;AAC1C,OAAOC,UAAU,MAAM,qBAAqB;AAC5C,OAAOC,MAAM,MAAM,iBAAiB;AACpC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,aAAa,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnD,eAAe,SAASC,SAASA,CAACC,KAAqB,EAAE;EACrD,oBACIJ,OAAA,CAAAE,SAAA;IAAAG,QAAA,eACIL,OAAA,CAACT,MAAM;MACHe,aAAa,EAAEF,KAAK,CAACG,KAAM;MAC3BC,QAAQ,EAAEJ,KAAK,CAACI,QAAS;MACzBC,gBAAgB,EAAEjB,GAAG,CAACkB,MAAM,CAAC;QACzBC,KAAK,EAAEnB,GAAG,CAACoB,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,yBAAyB,CAAC,CAACC,oBAAoB,CAAC;MACjF,CAAC,CAAE;MAAAT,QAAA,EAEDU,WAAW,iBACTf,OAAA,CAACV,IAAI;QAAC0B,WAAW,EAAEC,SAAU;QAACC,qBAAqB,EAAED,SAAU;QAACE,qBAAqB,EAAEF,SAAU;QAAAZ,QAAA,gBAE7FL,OAAA,CAACP,SAAS;UAAC2B,WAAW,EAAC,OAAO;UAACC,KAAK,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC/CzB,OAAA,CAACF,aAAa;UAACsB,WAAW,EAAC,aAAa;UAACC,KAAK,EAAC;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC9DzB,OAAA,CAACP,SAAS;UAAC2B,WAAW,EAAC,SAAS;UAACC,KAAK,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACnDzB,OAAA,CAACN,SAAS;UAAC0B,WAAW,EAAC,cAAc;UAACC,KAAK,EAAC;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC5DzB,OAAA,CAACL,UAAU;UAACyB,WAAW,EAAC,QAAQ;UAACC,KAAK,EAAC,QAAQ;UAC3CK,QAAQ,EAAEtB,KAAK,CAACG,KAAK,CAACoB;QAAU;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnC,CAAC,eAEFzB,OAAA,CAACJ,MAAM;UAACgC,QAAQ,EAAEb,WAAW,CAACc,YAAa;UACvCC,IAAI,EAAC,QAAQ;UAAAzB,QAAA,EAAC;QAAY;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACvCzB,OAAA,CAACH,IAAI;UAACkC,SAAS,EAAC,mBAAmB;UAACC,EAAE,EAAC,SAAS;UAAA3B,QAAA,EAAC;QAAM;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAE5D;IACT;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG;EAAC,gBACX,CAAC;AAEX;AAACQ,EAAA,GA9BuB9B,SAAS;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
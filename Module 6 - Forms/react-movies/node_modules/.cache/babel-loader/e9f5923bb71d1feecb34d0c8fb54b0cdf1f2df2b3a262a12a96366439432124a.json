{"ast":null,"code":"import { useEffect, useRef } from 'react';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { useLayerLifecycle } from './layer';\nimport { withPane } from './pane';\nexport function usePathOptions(element, props) {\n  const optionsRef = useRef();\n  useEffect(function updatePathOptions() {\n    if (props.pathOptions !== optionsRef.current) {\n      var _props$pathOptions;\n      const options = (_props$pathOptions = props.pathOptions) != null ? _props$pathOptions : {};\n      element.instance.setStyle(options);\n      optionsRef.current = options;\n    }\n  }, [element, props]);\n}\nexport function createPathHook(useElement) {\n  return function usePath(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    usePathOptions(elementRef.current, props);\n    return elementRef;\n  };\n}","map":{"version":3,"names":["useEffect","useRef","useLeafletContext","useEventHandlers","useLayerLifecycle","withPane","usePathOptions","element","props","optionsRef","updatePathOptions","pathOptions","current","_props$pathOptions","options","instance","setStyle","createPathHook","useElement","usePath","context","elementRef","eventHandlers"],"sources":["C:/Training/React-and-ASP.NET-Core/Module 6 - Forms/react-movies/node_modules/@react-leaflet/core/esm/path.js"],"sourcesContent":["import { useEffect, useRef } from 'react';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { useLayerLifecycle } from './layer';\nimport { withPane } from './pane';\nexport function usePathOptions(element, props) {\n  const optionsRef = useRef();\n  useEffect(function updatePathOptions() {\n    if (props.pathOptions !== optionsRef.current) {\n      var _props$pathOptions;\n\n      const options = (_props$pathOptions = props.pathOptions) != null ? _props$pathOptions : {};\n      element.instance.setStyle(options);\n      optionsRef.current = options;\n    }\n  }, [element, props]);\n}\nexport function createPathHook(useElement) {\n  return function usePath(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    usePathOptions(elementRef.current, props);\n    return elementRef;\n  };\n}"],"mappings":"AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACzC,SAASC,iBAAiB,QAAQ,WAAW;AAC7C,SAASC,gBAAgB,QAAQ,UAAU;AAC3C,SAASC,iBAAiB,QAAQ,SAAS;AAC3C,SAASC,QAAQ,QAAQ,QAAQ;AACjC,OAAO,SAASC,cAAcA,CAACC,OAAO,EAAEC,KAAK,EAAE;EAC7C,MAAMC,UAAU,GAAGR,MAAM,CAAC,CAAC;EAC3BD,SAAS,CAAC,SAASU,iBAAiBA,CAAA,EAAG;IACrC,IAAIF,KAAK,CAACG,WAAW,KAAKF,UAAU,CAACG,OAAO,EAAE;MAC5C,IAAIC,kBAAkB;MAEtB,MAAMC,OAAO,GAAG,CAACD,kBAAkB,GAAGL,KAAK,CAACG,WAAW,KAAK,IAAI,GAAGE,kBAAkB,GAAG,CAAC,CAAC;MAC1FN,OAAO,CAACQ,QAAQ,CAACC,QAAQ,CAACF,OAAO,CAAC;MAClCL,UAAU,CAACG,OAAO,GAAGE,OAAO;IAC9B;EACF,CAAC,EAAE,CAACP,OAAO,EAAEC,KAAK,CAAC,CAAC;AACtB;AACA,OAAO,SAASS,cAAcA,CAACC,UAAU,EAAE;EACzC,OAAO,SAASC,OAAOA,CAACX,KAAK,EAAE;IAC7B,MAAMY,OAAO,GAAGlB,iBAAiB,CAAC,CAAC;IACnC,MAAMmB,UAAU,GAAGH,UAAU,CAACb,QAAQ,CAACG,KAAK,EAAEY,OAAO,CAAC,EAAEA,OAAO,CAAC;IAChEjB,gBAAgB,CAACkB,UAAU,CAACT,OAAO,EAAEJ,KAAK,CAACc,aAAa,CAAC;IACzDlB,iBAAiB,CAACiB,UAAU,CAACT,OAAO,EAAEQ,OAAO,CAAC;IAC9Cd,cAAc,CAACe,UAAU,CAACT,OAAO,EAAEJ,KAAK,CAAC;IACzC,OAAOa,UAAU;EACnB,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
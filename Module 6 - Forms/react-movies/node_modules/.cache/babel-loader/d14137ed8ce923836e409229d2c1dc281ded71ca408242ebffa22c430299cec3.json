{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport React, { useEffect } from 'react';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport { TypeaheadContext } from './Context';\nimport { getHintText, getInputProps, getInputText, getIsOnlyResult, pick } from '../utils';\nimport { RETURN } from '../constants';\nvar inputPropKeys = ['activeIndex', 'disabled', 'id', 'inputRef', 'isFocused', 'isMenuShown', 'multiple', 'onBlur', 'onChange', 'onFocus', 'onKeyDown', 'placeholder'];\nvar propKeys = ['activeIndex', 'hideMenu', 'isMenuShown', 'labelKey', 'onClear', 'onHide', 'onRemove', 'results', 'selected', 'text', 'toggleMenu'];\nvar contextKeys = ['activeIndex', 'id', 'initialItem', 'inputNode', 'onActiveItemChange', 'onAdd', 'onInitialItemChange', 'onMenuItemClick', 'selectHintOnEnter', 'setItem'];\nvar TypeaheadManager = function TypeaheadManager(props) {\n  var allowNew = props.allowNew,\n    children = props.children,\n    initialItem = props.initialItem,\n    isMenuShown = props.isMenuShown,\n    onAdd = props.onAdd,\n    onInitialItemChange = props.onInitialItemChange,\n    onKeyDown = props.onKeyDown,\n    onMenuToggle = props.onMenuToggle,\n    results = props.results;\n  var prevProps = usePrevious(props);\n  useEffect(function () {\n    // Clear the initial item when there are no results.\n    if (!(allowNew || results.length)) {\n      onInitialItemChange(null);\n    }\n  });\n  useEffect(function () {\n    if (prevProps && prevProps.isMenuShown !== isMenuShown) {\n      onMenuToggle(isMenuShown);\n    }\n  });\n  var handleKeyDown = function handleKeyDown(e) {\n    switch (e.keyCode) {\n      case RETURN:\n        if (initialItem && getIsOnlyResult(props)) {\n          onAdd(initialItem);\n        }\n        break;\n      default:\n        break;\n    }\n    onKeyDown(e);\n  };\n  var childProps = _extends({}, pick(props, propKeys), {\n    getInputProps: getInputProps(_extends({}, pick(props, inputPropKeys), {\n      onKeyDown: handleKeyDown,\n      value: getInputText(props)\n    }))\n  });\n  var contextValue = _extends({}, pick(props, contextKeys), {\n    hintText: getHintText(props),\n    isOnlyResult: getIsOnlyResult(props)\n  });\n  return /*#__PURE__*/React.createElement(TypeaheadContext.Provider, {\n    value: contextValue\n  }, children(childProps));\n};\nexport default TypeaheadManager;","map":{"version":3,"names":["_extends","React","useEffect","usePrevious","TypeaheadContext","getHintText","getInputProps","getInputText","getIsOnlyResult","pick","RETURN","inputPropKeys","propKeys","contextKeys","TypeaheadManager","props","allowNew","children","initialItem","isMenuShown","onAdd","onInitialItemChange","onKeyDown","onMenuToggle","results","prevProps","length","handleKeyDown","e","keyCode","childProps","value","contextValue","hintText","isOnlyResult","createElement","Provider"],"sources":["C:/Training/React-and-ASP.NET-Core/Module 6 - Forms/react-movies/node_modules/react-bootstrap-typeahead/es/core/TypeaheadManager.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport React, { useEffect } from 'react';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport { TypeaheadContext } from './Context';\nimport { getHintText, getInputProps, getInputText, getIsOnlyResult, pick } from '../utils';\nimport { RETURN } from '../constants';\nvar inputPropKeys = ['activeIndex', 'disabled', 'id', 'inputRef', 'isFocused', 'isMenuShown', 'multiple', 'onBlur', 'onChange', 'onFocus', 'onKeyDown', 'placeholder'];\nvar propKeys = ['activeIndex', 'hideMenu', 'isMenuShown', 'labelKey', 'onClear', 'onHide', 'onRemove', 'results', 'selected', 'text', 'toggleMenu'];\nvar contextKeys = ['activeIndex', 'id', 'initialItem', 'inputNode', 'onActiveItemChange', 'onAdd', 'onInitialItemChange', 'onMenuItemClick', 'selectHintOnEnter', 'setItem'];\n\nvar TypeaheadManager = function TypeaheadManager(props) {\n  var allowNew = props.allowNew,\n      children = props.children,\n      initialItem = props.initialItem,\n      isMenuShown = props.isMenuShown,\n      onAdd = props.onAdd,\n      onInitialItemChange = props.onInitialItemChange,\n      onKeyDown = props.onKeyDown,\n      onMenuToggle = props.onMenuToggle,\n      results = props.results;\n  var prevProps = usePrevious(props);\n  useEffect(function () {\n    // Clear the initial item when there are no results.\n    if (!(allowNew || results.length)) {\n      onInitialItemChange(null);\n    }\n  });\n  useEffect(function () {\n    if (prevProps && prevProps.isMenuShown !== isMenuShown) {\n      onMenuToggle(isMenuShown);\n    }\n  });\n\n  var handleKeyDown = function handleKeyDown(e) {\n    switch (e.keyCode) {\n      case RETURN:\n        if (initialItem && getIsOnlyResult(props)) {\n          onAdd(initialItem);\n        }\n\n        break;\n\n      default:\n        break;\n    }\n\n    onKeyDown(e);\n  };\n\n  var childProps = _extends({}, pick(props, propKeys), {\n    getInputProps: getInputProps(_extends({}, pick(props, inputPropKeys), {\n      onKeyDown: handleKeyDown,\n      value: getInputText(props)\n    }))\n  });\n\n  var contextValue = _extends({}, pick(props, contextKeys), {\n    hintText: getHintText(props),\n    isOnlyResult: getIsOnlyResult(props)\n  });\n\n  return /*#__PURE__*/React.createElement(TypeaheadContext.Provider, {\n    value: contextValue\n  }, children(childProps));\n};\n\nexport default TypeaheadManager;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Training\\\\React-and-ASP.NET-Core\\\\Module 6 - Forms\\\\react-movies\\\\src\\\\genres\\\\CreateGenre.tsx\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"../utils/Button\";\nimport { Form, Formik } from \"formik\";\nimport * as Yup from 'yup';\nimport TextField from \"../forms/TextField\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CreateGenre() {\n  //const history = useHistory();\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create Genre\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        name: ''\n      },\n      onSubmit: async value => {\n        // when the form is posted\n        await new Promise(r => setTimeout(r, 3000));\n        console.log(value);\n      },\n      validationSchema: Yup.object({\n        name: Yup.string().required('This field is required.').firstLetterUppercase()\n      }),\n      children: formikProps => /*#__PURE__*/_jsxDEV(Form, {\n        placeholder: undefined,\n        onPointerEnterCapture: undefined,\n        onPointerLeaveCapture: undefined,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          field: \"name\",\n          displayName: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          disabled: formikProps.isSubmitting,\n          type: \"submit\",\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn btn-secondary\",\n          to: \"/genres\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_c = CreateGenre;\nvar _c;\n$RefreshReg$(_c, \"CreateGenre\");","map":{"version":3,"names":["Link","Button","Form","Formik","Yup","TextField","jsxDEV","_jsxDEV","Fragment","_Fragment","CreateGenre","children","fileName","_jsxFileName","lineNumber","columnNumber","initialValues","name","onSubmit","value","Promise","r","setTimeout","console","log","validationSchema","object","string","required","firstLetterUppercase","formikProps","placeholder","undefined","onPointerEnterCapture","onPointerLeaveCapture","field","displayName","disabled","isSubmitting","type","className","to","_c","$RefreshReg$"],"sources":["C:/Training/React-and-ASP.NET-Core/Module 6 - Forms/react-movies/src/genres/CreateGenre.tsx"],"sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport Button from \"../utils/Button\";\r\nimport { Form, Formik } from \"formik\";\r\nimport * as Yup from 'yup';\r\nimport TextField from \"../forms/TextField\";\r\n\r\nexport default function CreateGenre() {\r\n    //const history = useHistory();\r\n\r\n    return (\r\n        <>\r\n            <h3>Create Genre</h3>\r\n\r\n            <Formik initialValues={{\r\n                name: ''\r\n            }}\r\n            onSubmit={async value => {\r\n                // when the form is posted\r\n                await new Promise(r => setTimeout(r, 3000));\r\n                console.log(value);\r\n            }}\r\n            validationSchema={Yup.object({\r\n                name: Yup.string().required('This field is required.').firstLetterUppercase()\r\n            })}\r\n            >\r\n                {(formikProps) => (\r\n                    <Form placeholder={undefined} onPointerEnterCapture={undefined} onPointerLeaveCapture={undefined}>\r\n                        <TextField field=\"name\" displayName=\"Name\" />\r\n\r\n                        <Button disabled={formikProps.isSubmitting} type='submit'>Save Changes</Button>\r\n                        <Link className=\"btn btn-secondary\" to=\"/genres\">Cancel</Link>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n    )\r\n}"],"mappings":";AAAA,SAASA,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,MAAM,MAAM,iBAAiB;AACpC,SAASC,IAAI,EAAEC,MAAM,QAAQ,QAAQ;AACrC,OAAO,KAAKC,GAAG,MAAM,KAAK;AAC1B,OAAOC,SAAS,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE3C,eAAe,SAASC,WAAWA,CAAA,EAAG;EAClC;;EAEA,oBACIH,OAAA,CAAAE,SAAA;IAAAE,QAAA,gBACIJ,OAAA;MAAAI,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAErBR,OAAA,CAACJ,MAAM;MAACa,aAAa,EAAE;QACnBC,IAAI,EAAE;MACV,CAAE;MACFC,QAAQ,EAAE,MAAMC,KAAK,IAAI;QACrB;QACA,MAAM,IAAIC,OAAO,CAACC,CAAC,IAAIC,UAAU,CAACD,CAAC,EAAE,IAAI,CAAC,CAAC;QAC3CE,OAAO,CAACC,GAAG,CAACL,KAAK,CAAC;MACtB,CAAE;MACFM,gBAAgB,EAAErB,GAAG,CAACsB,MAAM,CAAC;QACzBT,IAAI,EAAEb,GAAG,CAACuB,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,yBAAyB,CAAC,CAACC,oBAAoB,CAAC;MAChF,CAAC,CAAE;MAAAlB,QAAA,EAEGmB,WAAW,iBACTvB,OAAA,CAACL,IAAI;QAAC6B,WAAW,EAAEC,SAAU;QAACC,qBAAqB,EAAED,SAAU;QAACE,qBAAqB,EAAEF,SAAU;QAAArB,QAAA,gBAC7FJ,OAAA,CAACF,SAAS;UAAC8B,KAAK,EAAC,MAAM;UAACC,WAAW,EAAC;QAAM;UAAAxB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAE7CR,OAAA,CAACN,MAAM;UAACoC,QAAQ,EAAEP,WAAW,CAACQ,YAAa;UAACC,IAAI,EAAC,QAAQ;UAAA5B,QAAA,EAAC;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC/ER,OAAA,CAACP,IAAI;UAACwC,SAAS,EAAC,mBAAmB;UAACC,EAAE,EAAC,SAAS;UAAA9B,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5D;IACT;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA,eACX,CAAC;AAEX;AAAC2B,EAAA,GA9BuBhC,WAAW;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Training\\\\React-and-ASP.NET-Core\\\\Module 6 - Forms\\\\react-movies\\\\src\\\\genres\\\\CreateGenre.tsx\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"../utils/Button\";\nimport { Form, Formik } from \"formik\";\nimport * as Yup from 'yup';\nimport TextField from \"../forms/TextField\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CreateGenre() {\n  //const history = useHistory();\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create Genre\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        name: ''\n      },\n      onSubmit: value => {\n        // when the form is posted\n        console.log(value);\n      },\n      validationSchema: Yup.object({\n        name: Yup.string().required('This field is required.').firstLetterUppercase()\n      }),\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        placeholder: undefined,\n        onPointerEnterCapture: undefined,\n        onPointerLeaveCapture: undefined,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          field: \"name\",\n          displayName: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn btn-secondary\",\n          to: \"/genres\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_c = CreateGenre;\nvar _c;\n$RefreshReg$(_c, \"CreateGenre\");","map":{"version":3,"names":["Link","Button","Form","Formik","Yup","TextField","jsxDEV","_jsxDEV","Fragment","_Fragment","CreateGenre","children","fileName","_jsxFileName","lineNumber","columnNumber","initialValues","name","onSubmit","value","console","log","validationSchema","object","string","required","firstLetterUppercase","placeholder","undefined","onPointerEnterCapture","onPointerLeaveCapture","field","displayName","type","className","to","_c","$RefreshReg$"],"sources":["C:/Training/React-and-ASP.NET-Core/Module 6 - Forms/react-movies/src/genres/CreateGenre.tsx"],"sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport Button from \"../utils/Button\";\r\nimport { Form, Formik } from \"formik\";\r\nimport * as Yup from 'yup';\r\nimport TextField from \"../forms/TextField\";\r\n\r\nexport default function CreateGenre() {\r\n    //const history = useHistory();\r\n\r\n    return (\r\n        <>\r\n            <h3>Create Genre</h3>\r\n\r\n            <Formik initialValues={{\r\n                name: ''\r\n            }}\r\n            onSubmit={value => {\r\n                // when the form is posted\r\n                console.log(value);\r\n            }}\r\n            validationSchema={Yup.object({\r\n                name: Yup.string().required('This field is required.').firstLetterUppercase()\r\n            })}\r\n            >\r\n                <Form placeholder={undefined} onPointerEnterCapture={undefined} onPointerLeaveCapture={undefined}>\r\n                    <TextField field=\"name\" displayName=\"Name\" />\r\n\r\n                    <Button type='submit'>Save Changes</Button>\r\n                    <Link className=\"btn btn-secondary\" to=\"/genres\">Cancel</Link>\r\n                </Form>\r\n            </Formik>\r\n        </>\r\n    )\r\n}"],"mappings":";AAAA,SAASA,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,MAAM,MAAM,iBAAiB;AACpC,SAASC,IAAI,EAAEC,MAAM,QAAQ,QAAQ;AACrC,OAAO,KAAKC,GAAG,MAAM,KAAK;AAC1B,OAAOC,SAAS,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE3C,eAAe,SAASC,WAAWA,CAAA,EAAG;EAClC;;EAEA,oBACIH,OAAA,CAAAE,SAAA;IAAAE,QAAA,gBACIJ,OAAA;MAAAI,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAErBR,OAAA,CAACJ,MAAM;MAACa,aAAa,EAAE;QACnBC,IAAI,EAAE;MACV,CAAE;MACFC,QAAQ,EAAEC,KAAK,IAAI;QACf;QACAC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACtB,CAAE;MACFG,gBAAgB,EAAElB,GAAG,CAACmB,MAAM,CAAC;QACzBN,IAAI,EAAEb,GAAG,CAACoB,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,yBAAyB,CAAC,CAACC,oBAAoB,CAAC;MAChF,CAAC,CAAE;MAAAf,QAAA,eAECJ,OAAA,CAACL,IAAI;QAACyB,WAAW,EAAEC,SAAU;QAACC,qBAAqB,EAAED,SAAU;QAACE,qBAAqB,EAAEF,SAAU;QAAAjB,QAAA,gBAC7FJ,OAAA,CAACF,SAAS;UAAC0B,KAAK,EAAC,MAAM;UAACC,WAAW,EAAC;QAAM;UAAApB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAE7CR,OAAA,CAACN,MAAM;UAACgC,IAAI,EAAC,QAAQ;UAAAtB,QAAA,EAAC;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC3CR,OAAA,CAACP,IAAI;UAACkC,SAAS,EAAC,mBAAmB;UAACC,EAAE,EAAC,SAAS;UAAAxB,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA,eACX,CAAC;AAEX;AAACqB,EAAA,GA3BuB1B,WAAW;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
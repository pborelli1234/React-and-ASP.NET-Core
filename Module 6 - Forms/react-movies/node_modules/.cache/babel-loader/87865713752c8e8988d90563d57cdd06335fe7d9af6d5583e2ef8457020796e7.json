{"ast":null,"code":"var _jsxFileName = \"C:\\\\Training\\\\React-and-ASP.NET-Core\\\\Module 6 - Forms\\\\react-movies\\\\src\\\\movietheaters\\\\MovieTheaterForm.tsx\";\nimport { Form, Formik } from \"formik\";\nimport TextField from \"../forms/TextField\";\nimport Button from \"../utils/Button\";\nimport { Link } from \"react-router-dom\";\nimport * as Yup from 'yup';\nimport MapField from \"../forms/MapField\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MovieTheaterForm(props) {\n  function transformCoordinates() {\n    if (props.model.latitude && props.model.longitude) {\n      const response = {\n        lat: props.model.latitude,\n        lng: props.model.longitude\n      };\n      return [response];\n    }\n    return undefined;\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: props.model,\n      onSubmit: props.onSubmit,\n      validationSchema: Yup.object({\n        name: Yup.string().required('This field is required.').firstLetterUppercase()\n      }),\n      children: formikProps => /*#__PURE__*/_jsxDEV(Form, {\n        placeholder: undefined,\n        onPointerEnterCapture: undefined,\n        onPointerLeaveCapture: undefined,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          displayName: \"Name\",\n          field: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '1rem'\n          },\n          children: /*#__PURE__*/_jsxDEV(MapField, {\n            latField: \"latitude\",\n            lngField: \"longitude\",\n            coordinates: transformCoordinates()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          disabled: formikProps.isSubmitting,\n          type: \"submit\",\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn btn-secondary\",\n          to: \"/movietheaters\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_c = MovieTheaterForm;\nvar _c;\n$RefreshReg$(_c, \"MovieTheaterForm\");","map":{"version":3,"names":["Form","Formik","TextField","Button","Link","Yup","MapField","jsxDEV","_jsxDEV","Fragment","_Fragment","MovieTheaterForm","props","transformCoordinates","model","latitude","longitude","response","lat","lng","undefined","children","initialValues","onSubmit","validationSchema","object","name","string","required","firstLetterUppercase","formikProps","placeholder","onPointerEnterCapture","onPointerLeaveCapture","displayName","field","fileName","_jsxFileName","lineNumber","columnNumber","style","marginBottom","latField","lngField","coordinates","disabled","isSubmitting","type","className","to","_c","$RefreshReg$"],"sources":["C:/Training/React-and-ASP.NET-Core/Module 6 - Forms/react-movies/src/movietheaters/MovieTheaterForm.tsx"],"sourcesContent":["import { Form, Formik, FormikHandlers, FormikHelpers } from \"formik\";\r\nimport TextField from \"../forms/TextField\";\r\nimport Button from \"../utils/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { movieTheaterCreationDTO } from \"./movieTheater.model\";\r\nimport * as Yup from 'yup';\r\nimport MapField from \"../forms/MapField\";\r\nimport { coordinateDTO } from \"../utils/coordinates.model\";\r\n\r\nexport default function MovieTheaterForm(props: movieTheaterFormProps) {\r\n\r\n    function transformCoordinates() : coordinateDTO[] | undefined {\r\n        if (props.model.latitude && props.model.longitude) {\r\n            const response: coordinateDTO = {lat: props.model.latitude, lng: props.model.longitude}\r\n\r\n            return [response];\r\n        }\r\n\r\n        return undefined;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Formik\r\n                initialValues={props.model}\r\n                onSubmit={props.onSubmit}\r\n                validationSchema={Yup.object({\r\n                    name: Yup.string().required('This field is required.').firstLetterUppercase()\r\n                })}\r\n            >\r\n                {(formikProps) => (\r\n                    <Form placeholder={undefined} onPointerEnterCapture={undefined} onPointerLeaveCapture={undefined}>\r\n                        <TextField displayName=\"Name\" field=\"name\" />\r\n\r\n                        <div style={{marginBottom: '1rem'}}>\r\n                            <MapField latField=\"latitude\" lngField=\"longitude\" \r\n                                coordinates={transformCoordinates()}\r\n                        />\r\n                        </div>\r\n\r\n                        <Button disabled={formikProps.isSubmitting} type=\"submit\">\r\n                            Save Changes\r\n                        </Button>\r\n                        <Link className=\"btn btn-secondary\" to=\"/movietheaters\">Cancel</Link>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </>\r\n    )\r\n}\r\n\r\ninterface movieTheaterFormProps {\r\n    model: movieTheaterCreationDTO;\r\n    onSubmit(values: movieTheaterCreationDTO, action: FormikHelpers<movieTheaterCreationDTO>): void;\r\n}"],"mappings":";AAAA,SAASA,IAAI,EAAEC,MAAM,QAAuC,QAAQ;AACpE,OAAOC,SAAS,MAAM,oBAAoB;AAC1C,OAAOC,MAAM,MAAM,iBAAiB;AACpC,SAASC,IAAI,QAAQ,kBAAkB;AAEvC,OAAO,KAAKC,GAAG,MAAM,KAAK;AAC1B,OAAOC,QAAQ,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAGzC,eAAe,SAASC,gBAAgBA,CAACC,KAA4B,EAAE;EAEnE,SAASC,oBAAoBA,CAAA,EAAiC;IAC1D,IAAID,KAAK,CAACE,KAAK,CAACC,QAAQ,IAAIH,KAAK,CAACE,KAAK,CAACE,SAAS,EAAE;MAC/C,MAAMC,QAAuB,GAAG;QAACC,GAAG,EAAEN,KAAK,CAACE,KAAK,CAACC,QAAQ;QAAEI,GAAG,EAAEP,KAAK,CAACE,KAAK,CAACE;MAAS,CAAC;MAEvF,OAAO,CAACC,QAAQ,CAAC;IACrB;IAEA,OAAOG,SAAS;EACpB;EAEA,oBACIZ,OAAA,CAAAE,SAAA;IAAAW,QAAA,eACIb,OAAA,CAACP,MAAM;MACHqB,aAAa,EAAEV,KAAK,CAACE,KAAM;MAC3BS,QAAQ,EAAEX,KAAK,CAACW,QAAS;MACzBC,gBAAgB,EAAEnB,GAAG,CAACoB,MAAM,CAAC;QACzBC,IAAI,EAAErB,GAAG,CAACsB,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,yBAAyB,CAAC,CAACC,oBAAoB,CAAC;MAChF,CAAC,CAAE;MAAAR,QAAA,EAEDS,WAAW,iBACTtB,OAAA,CAACR,IAAI;QAAC+B,WAAW,EAAEX,SAAU;QAACY,qBAAqB,EAAEZ,SAAU;QAACa,qBAAqB,EAAEb,SAAU;QAAAC,QAAA,gBAC7Fb,OAAA,CAACN,SAAS;UAACgC,WAAW,EAAC,MAAM;UAACC,KAAK,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAE7C/B,OAAA;UAAKgC,KAAK,EAAE;YAACC,YAAY,EAAE;UAAM,CAAE;UAAApB,QAAA,eAC/Bb,OAAA,CAACF,QAAQ;YAACoC,QAAQ,EAAC,UAAU;YAACC,QAAQ,EAAC,WAAW;YAC9CC,WAAW,EAAE/B,oBAAoB,CAAC;UAAE;YAAAuB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3C;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC,eAEN/B,OAAA,CAACL,MAAM;UAAC0C,QAAQ,EAAEf,WAAW,CAACgB,YAAa;UAACC,IAAI,EAAC,QAAQ;UAAA1B,QAAA,EAAC;QAE1D;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACT/B,OAAA,CAACJ,IAAI;UAAC4C,SAAS,EAAC,mBAAmB;UAACC,EAAE,EAAC,gBAAgB;UAAA5B,QAAA,EAAC;QAAM;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnE;IACT;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG;EAAC,gBACX,CAAC;AAEX;AAACW,EAAA,GAxCuBvC,gBAAgB;AAAA,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
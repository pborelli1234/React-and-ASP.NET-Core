{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport isEqual from 'fast-deep-equal';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport TypeaheadManager from './TypeaheadManager';\nimport { caseSensitiveType, checkPropType, defaultInputValueType, defaultSelectedType, deprecated, highlightOnlyResultType, ignoreDiacriticsType, isRequiredForA11y, labelKeyType, optionType, selectedType } from '../propTypes';\nimport { addCustomOption, defaultFilterBy, getOptionLabel, getStringLabelKey, getUpdatedActiveIndex, getTruncatedOptions, head, isShown, isString, noop, uniqueId, validateSelectedPropChange } from '../utils';\nimport { DEFAULT_LABELKEY, DOWN, ESC, RETURN, TAB, UP } from '../constants';\nvar propTypes = {\n  /**\n   * Allows the creation of new selections on the fly. Note that any new items\n   * will be added to the list of selections, but not the list of original\n   * options unless handled as such by `Typeahead`'s parent.\n   *\n   * If a function is specified, it will be used to determine whether a custom\n   * option should be included. The return value should be true or false.\n   */\n  allowNew: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n  /**\n   * Autofocus the input when the component initially mounts.\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * Whether or not filtering should be case-sensitive.\n   */\n  caseSensitive: checkPropType(PropTypes.bool, caseSensitiveType),\n  /**\n   * The initial value displayed in the text input.\n   */\n  defaultInputValue: checkPropType(PropTypes.string, defaultInputValueType),\n  /**\n   * Whether or not the menu is displayed upon initial render.\n   */\n  defaultOpen: PropTypes.bool,\n  /**\n   * Specify any pre-selected options. Use only if you want the component to\n   * be uncontrolled.\n   */\n  defaultSelected: checkPropType(PropTypes.arrayOf(optionType), defaultSelectedType),\n  /**\n   * Either an array of fields in `option` to search, or a custom filtering\n   * callback.\n   */\n  filterBy: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string.isRequired), PropTypes.func]),\n  /**\n   * Highlights the menu item if there is only one result and allows selecting\n   * that item by hitting enter. Does not work with `allowNew`.\n   */\n  highlightOnlyResult: checkPropType(PropTypes.bool, highlightOnlyResultType),\n  /**\n   * An html id attribute, required for assistive technologies such as screen\n   * readers.\n   */\n  id: checkPropType(PropTypes.oneOfType([PropTypes.number, PropTypes.string]), isRequiredForA11y),\n  /**\n   * Whether the filter should ignore accents and other diacritical marks.\n   */\n  ignoreDiacritics: checkPropType(PropTypes.bool, ignoreDiacriticsType),\n  /**\n   * Specify the option key to use for display or a function returning the\n   * display string. By default, the selector will use the `label` key.\n   */\n  labelKey: checkPropType(PropTypes.oneOfType([PropTypes.string, PropTypes.func]), labelKeyType),\n  /**\n   * Maximum number of results to display by default. Mostly done for\n   * performance reasons so as not to render too many DOM nodes in the case of\n   * large data sets.\n   */\n  maxResults: PropTypes.number,\n  /**\n   * Number of input characters that must be entered before showing results.\n   */\n  minLength: PropTypes.number,\n  /**\n   * Whether or not multiple selections are allowed.\n   */\n  multiple: PropTypes.bool,\n  /**\n   * Invoked when the input is blurred. Receives an event.\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Invoked whenever items are added or removed. Receives an array of the\n   * selected options.\n   */\n  onChange: PropTypes.func,\n  /**\n   * Invoked when the input is focused. Receives an event.\n   */\n  onFocus: PropTypes.func,\n  /**\n   * Invoked when the input value changes. Receives the string value of the\n   * input.\n   */\n  onInputChange: PropTypes.func,\n  /**\n   * Invoked when a key is pressed. Receives an event.\n   */\n  onKeyDown: PropTypes.func,\n  /**\n   * Invoked when menu visibility changes.\n   */\n  onMenuToggle: PropTypes.func,\n  /**\n   * Invoked when the pagination menu item is clicked. Receives an event.\n   */\n  onPaginate: PropTypes.func,\n  /**\n   * Whether or not the menu should be displayed. `undefined` allows the\n   * component to control visibility, while `true` and `false` show and hide\n   * the menu, respectively.\n   */\n  open: PropTypes.bool,\n  /**\n   * Full set of options, including pre-selected options. Must either be an\n   * array of objects (recommended) or strings.\n   */\n  options: PropTypes.arrayOf(optionType).isRequired,\n  /**\n   * Give user the ability to display additional results if the number of\n   * results exceeds `maxResults`.\n   */\n  paginate: PropTypes.bool,\n  /**\n   * The selected option(s) displayed in the input. Use this prop if you want\n   * to control the component via its parent.\n   */\n  selected: checkPropType(PropTypes.arrayOf(optionType), selectedType),\n  /**\n   * Allows selecting the hinted result by pressing enter.\n   */\n  selectHintOnEnter: deprecated(PropTypes.bool, 'Use the `shouldSelect` prop on the `Hint` component to define which ' + 'keystrokes can select the hint.')\n};\nvar defaultProps = {\n  allowNew: false,\n  autoFocus: false,\n  caseSensitive: false,\n  defaultInputValue: '',\n  defaultOpen: false,\n  defaultSelected: [],\n  filterBy: [],\n  highlightOnlyResult: false,\n  ignoreDiacritics: true,\n  labelKey: DEFAULT_LABELKEY,\n  maxResults: 100,\n  minLength: 0,\n  multiple: false,\n  onBlur: noop,\n  onFocus: noop,\n  onInputChange: noop,\n  onKeyDown: noop,\n  onMenuToggle: noop,\n  onPaginate: noop,\n  paginate: true\n};\nexport function getInitialState(props) {\n  var defaultInputValue = props.defaultInputValue,\n    defaultOpen = props.defaultOpen,\n    defaultSelected = props.defaultSelected,\n    maxResults = props.maxResults,\n    multiple = props.multiple;\n  var selected = props.selected ? props.selected.slice() : defaultSelected.slice();\n  var text = defaultInputValue;\n  if (!multiple && selected.length) {\n    // Set the text if an initial selection is passed in.\n    text = getOptionLabel(head(selected), props.labelKey);\n    if (selected.length > 1) {\n      // Limit to 1 selection in single-select mode.\n      selected = selected.slice(0, 1);\n    }\n  }\n  return {\n    activeIndex: -1,\n    activeItem: null,\n    initialItem: null,\n    isFocused: false,\n    selected: selected,\n    showMenu: defaultOpen,\n    shownResults: maxResults,\n    text: text\n  };\n}\nexport function clearTypeahead(state, props) {\n  return _extends({}, getInitialState(props), {\n    isFocused: state.isFocused,\n    selected: [],\n    text: ''\n  });\n}\nexport function hideMenu(state, props) {\n  var _getInitialState = getInitialState(props),\n    activeIndex = _getInitialState.activeIndex,\n    activeItem = _getInitialState.activeItem,\n    initialItem = _getInitialState.initialItem,\n    shownResults = _getInitialState.shownResults;\n  return {\n    activeIndex: activeIndex,\n    activeItem: activeItem,\n    initialItem: initialItem,\n    showMenu: false,\n    shownResults: shownResults\n  };\n}\nexport function toggleMenu(state, props) {\n  return state.showMenu ? hideMenu(state, props) : {\n    showMenu: true\n  };\n}\nvar Typeahead = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Typeahead, _React$Component);\n  function Typeahead() {\n    var _this;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _defineProperty(_assertThisInitialized(_this), \"state\", getInitialState(_this.props));\n    _defineProperty(_assertThisInitialized(_this), \"inputNode\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"isMenuShown\", false);\n    _defineProperty(_assertThisInitialized(_this), \"items\", []);\n    _defineProperty(_assertThisInitialized(_this), \"blur\", function () {\n      _this.inputNode && _this.inputNode.blur();\n      _this.hideMenu();\n    });\n    _defineProperty(_assertThisInitialized(_this), \"clear\", function () {\n      _this.setState(clearTypeahead);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"focus\", function () {\n      _this.inputNode && _this.inputNode.focus();\n    });\n    _defineProperty(_assertThisInitialized(_this), \"getInput\", function () {\n      return _this.inputNode;\n    });\n    _defineProperty(_assertThisInitialized(_this), \"inputRef\", function (inputNode) {\n      _this.inputNode = inputNode;\n    });\n    _defineProperty(_assertThisInitialized(_this), \"setItem\", function (item, position) {\n      _this.items[position] = item;\n    });\n    _defineProperty(_assertThisInitialized(_this), \"hideMenu\", function () {\n      _this.setState(hideMenu);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"toggleMenu\", function () {\n      _this.setState(toggleMenu);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_handleActiveIndexChange\", function (activeIndex) {\n      _this.setState(function (state) {\n        return {\n          activeIndex: activeIndex,\n          activeItem: activeIndex === -1 ? null : state.activeItem\n        };\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_handleActiveItemChange\", function (activeItem) {\n      // Don't update the active item if it hasn't changed.\n      if (!isEqual(activeItem, _this.state.activeItem)) {\n        _this.setState({\n          activeItem: activeItem\n        });\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_handleBlur\", function (e) {\n      e.persist();\n      _this.setState({\n        isFocused: false\n      }, function () {\n        return _this.props.onBlur(e);\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_handleChange\", function (selected) {\n      _this.props.onChange && _this.props.onChange(selected);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_handleClear\", function () {\n      _this.setState(clearTypeahead, function () {\n        return _this._handleChange([]);\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_handleFocus\", function (e) {\n      e.persist();\n      _this.setState({\n        isFocused: true,\n        showMenu: true\n      }, function () {\n        return _this.props.onFocus(e);\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_handleInitialItemChange\", function (initialItem) {\n      // Don't update the initial item if it hasn't changed.\n      if (!isEqual(initialItem, _this.state.initialItem)) {\n        _this.setState({\n          initialItem: initialItem\n        });\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_handleInputChange\", function (e) {\n      e.persist();\n      var text = e.currentTarget.value;\n      var _this$props = _this.props,\n        multiple = _this$props.multiple,\n        onInputChange = _this$props.onInputChange; // Clear selections when the input value changes in single-select mode.\n\n      var shouldClearSelections = _this.state.selected.length && !multiple;\n      _this.setState(function (state, props) {\n        var _getInitialState2 = getInitialState(props),\n          activeIndex = _getInitialState2.activeIndex,\n          activeItem = _getInitialState2.activeItem,\n          shownResults = _getInitialState2.shownResults;\n        return {\n          activeIndex: activeIndex,\n          activeItem: activeItem,\n          selected: shouldClearSelections ? [] : state.selected,\n          showMenu: true,\n          shownResults: shownResults,\n          text: text\n        };\n      }, function () {\n        onInputChange(text, e);\n        shouldClearSelections && _this._handleChange([]);\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_handleKeyDown\", function (e) {\n      var activeItem = _this.state.activeItem; // Skip most actions when the menu is hidden.\n\n      if (!_this.isMenuShown) {\n        if (e.keyCode === UP || e.keyCode === DOWN) {\n          _this.setState({\n            showMenu: true\n          });\n        }\n        _this.props.onKeyDown(e);\n        return;\n      }\n      switch (e.keyCode) {\n        case UP:\n        case DOWN:\n          // Prevent input cursor from going to the beginning when pressing up.\n          e.preventDefault();\n          _this._handleActiveIndexChange(getUpdatedActiveIndex(_this.state.activeIndex, e.keyCode, _this.items));\n          break;\n        case RETURN:\n          // Prevent form submission while menu is open.\n          e.preventDefault();\n          activeItem && _this._handleMenuItemSelect(activeItem, e);\n          break;\n        case ESC:\n        case TAB:\n          // ESC simply hides the menu. TAB will blur the input and move focus to\n          // the next item; hide the menu so it doesn't gain focus.\n          _this.hideMenu();\n          break;\n        default:\n          break;\n      }\n      _this.props.onKeyDown(e);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_handleMenuItemSelect\", function (option, e) {\n      if (option.paginationOption) {\n        _this._handlePaginate(e);\n      } else {\n        _this._handleSelectionAdd(option);\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_handlePaginate\", function (e) {\n      e.persist();\n      _this.setState(function (state, props) {\n        return {\n          shownResults: state.shownResults + props.maxResults\n        };\n      }, function () {\n        return _this.props.onPaginate(e, _this.state.shownResults);\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_handleSelectionAdd\", function (option) {\n      var _this$props2 = _this.props,\n        multiple = _this$props2.multiple,\n        labelKey = _this$props2.labelKey;\n      var selected;\n      var selection = option;\n      var text; // Add a unique id to the custom selection. Avoid doing this in `render` so\n      // the id doesn't increment every time.\n\n      if (!isString(selection) && selection.customOption) {\n        selection = _extends({}, selection, {\n          id: uniqueId('new-id-')\n        });\n      }\n      if (multiple) {\n        // If multiple selections are allowed, add the new selection to the\n        // existing selections.\n        selected = _this.state.selected.concat(selection);\n        text = '';\n      } else {\n        // If only a single selection is allowed, replace the existing selection\n        // with the new one.\n        selected = [selection];\n        text = getOptionLabel(selection, labelKey);\n      }\n      _this.setState(function (state, props) {\n        return _extends({}, hideMenu(state, props), {\n          initialItem: selection,\n          selected: selected,\n          text: text\n        });\n      }, function () {\n        return _this._handleChange(selected);\n      });\n    });\n    _defineProperty(_assertThisInitialized(_this), \"_handleSelectionRemove\", function (selection) {\n      var selected = _this.state.selected.filter(function (option) {\n        return !isEqual(option, selection);\n      }); // Make sure the input stays focused after the item is removed.\n\n      _this.focus();\n      _this.setState(function (state, props) {\n        return _extends({}, hideMenu(state, props), {\n          selected: selected\n        });\n      }, function () {\n        return _this._handleChange(selected);\n      });\n    });\n    return _this;\n  }\n  var _proto = Typeahead.prototype;\n  _proto.componentDidMount = function componentDidMount() {\n    this.props.autoFocus && this.focus();\n  };\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n    var _this$props3 = this.props,\n      labelKey = _this$props3.labelKey,\n      multiple = _this$props3.multiple,\n      selected = _this$props3.selected;\n    validateSelectedPropChange(selected, prevProps.selected); // Sync selections in state with those in props.\n\n    if (selected && !isEqual(selected, prevState.selected)) {\n      this.setState({\n        selected: selected\n      });\n      if (!multiple) {\n        this.setState({\n          text: selected.length ? getOptionLabel(head(selected), labelKey) : ''\n        });\n      }\n    }\n  };\n  _proto.render = function render() {\n    // Omit `onChange` so Flow doesn't complain.\n    var _this$props4 = this.props,\n      onChange = _this$props4.onChange,\n      otherProps = _objectWithoutPropertiesLoose(_this$props4, [\"onChange\"]);\n    var mergedPropsAndState = _extends({}, otherProps, this.state);\n    var filterBy = mergedPropsAndState.filterBy,\n      labelKey = mergedPropsAndState.labelKey,\n      options = mergedPropsAndState.options,\n      paginate = mergedPropsAndState.paginate,\n      shownResults = mergedPropsAndState.shownResults,\n      text = mergedPropsAndState.text;\n    this.isMenuShown = isShown(mergedPropsAndState);\n    this.items = []; // Reset items on re-render.\n\n    var results = [];\n    if (this.isMenuShown) {\n      var cb = typeof filterBy === 'function' ? filterBy : defaultFilterBy;\n      results = options.filter(function (option) {\n        return cb(option, mergedPropsAndState);\n      }); // This must come before results are truncated.\n\n      var shouldPaginate = paginate && results.length > shownResults; // Truncate results if necessary.\n\n      results = getTruncatedOptions(results, shownResults); // Add the custom option if necessary.\n\n      if (addCustomOption(results, mergedPropsAndState)) {\n        var _results$push;\n        results.push((_results$push = {\n          customOption: true\n        }, _results$push[getStringLabelKey(labelKey)] = text, _results$push));\n      } // Add the pagination item if necessary.\n\n      if (shouldPaginate) {\n        var _results$push2;\n        results.push((_results$push2 = {}, _results$push2[getStringLabelKey(labelKey)] = '', _results$push2.paginationOption = true, _results$push2));\n      }\n    }\n    return /*#__PURE__*/React.createElement(TypeaheadManager, _extends({}, mergedPropsAndState, {\n      hideMenu: this.hideMenu,\n      inputNode: this.inputNode,\n      inputRef: this.inputRef,\n      isMenuShown: this.isMenuShown,\n      onActiveItemChange: this._handleActiveItemChange,\n      onAdd: this._handleSelectionAdd,\n      onBlur: this._handleBlur,\n      onChange: this._handleInputChange,\n      onClear: this._handleClear,\n      onFocus: this._handleFocus,\n      onHide: this.hideMenu,\n      onInitialItemChange: this._handleInitialItemChange,\n      onKeyDown: this._handleKeyDown,\n      onMenuItemClick: this._handleMenuItemSelect,\n      onRemove: this._handleSelectionRemove,\n      results: results,\n      setItem: this.setItem,\n      toggleMenu: this.toggleMenu\n    }));\n  };\n  return Typeahead;\n}(React.Component);\n_defineProperty(Typeahead, \"propTypes\", propTypes);\n_defineProperty(Typeahead, \"defaultProps\", defaultProps);\nexport default Typeahead;","map":{"version":3,"names":["_objectWithoutPropertiesLoose","_assertThisInitialized","_inheritsLoose","_defineProperty","_extends","isEqual","PropTypes","React","TypeaheadManager","caseSensitiveType","checkPropType","defaultInputValueType","defaultSelectedType","deprecated","highlightOnlyResultType","ignoreDiacriticsType","isRequiredForA11y","labelKeyType","optionType","selectedType","addCustomOption","defaultFilterBy","getOptionLabel","getStringLabelKey","getUpdatedActiveIndex","getTruncatedOptions","head","isShown","isString","noop","uniqueId","validateSelectedPropChange","DEFAULT_LABELKEY","DOWN","ESC","RETURN","TAB","UP","propTypes","allowNew","oneOfType","bool","func","autoFocus","caseSensitive","defaultInputValue","string","defaultOpen","defaultSelected","arrayOf","filterBy","isRequired","highlightOnlyResult","id","number","ignoreDiacritics","labelKey","maxResults","minLength","multiple","onBlur","onChange","onFocus","onInputChange","onKeyDown","onMenuToggle","onPaginate","open","options","paginate","selected","selectHintOnEnter","defaultProps","getInitialState","props","slice","text","length","activeIndex","activeItem","initialItem","isFocused","showMenu","shownResults","clearTypeahead","state","hideMenu","_getInitialState","toggleMenu","Typeahead","_React$Component","_this","_len","arguments","args","Array","_key","call","apply","concat","inputNode","blur","setState","focus","item","position","items","e","persist","_handleChange","currentTarget","value","_this$props","shouldClearSelections","_getInitialState2","isMenuShown","keyCode","preventDefault","_handleActiveIndexChange","_handleMenuItemSelect","option","paginationOption","_handlePaginate","_handleSelectionAdd","_this$props2","selection","customOption","filter","_proto","prototype","componentDidMount","componentDidUpdate","prevProps","prevState","_this$props3","render","_this$props4","otherProps","mergedPropsAndState","results","cb","shouldPaginate","_results$push","push","_results$push2","createElement","inputRef","onActiveItemChange","_handleActiveItemChange","onAdd","_handleBlur","_handleInputChange","onClear","_handleClear","_handleFocus","onHide","onInitialItemChange","_handleInitialItemChange","_handleKeyDown","onMenuItemClick","onRemove","_handleSelectionRemove","setItem","Component"],"sources":["C:/Training/React-and-ASP.NET-Core/Module 6 - Forms/react-movies/node_modules/react-bootstrap-typeahead/es/core/Typeahead.js"],"sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport isEqual from 'fast-deep-equal';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport TypeaheadManager from './TypeaheadManager';\nimport { caseSensitiveType, checkPropType, defaultInputValueType, defaultSelectedType, deprecated, highlightOnlyResultType, ignoreDiacriticsType, isRequiredForA11y, labelKeyType, optionType, selectedType } from '../propTypes';\nimport { addCustomOption, defaultFilterBy, getOptionLabel, getStringLabelKey, getUpdatedActiveIndex, getTruncatedOptions, head, isShown, isString, noop, uniqueId, validateSelectedPropChange } from '../utils';\nimport { DEFAULT_LABELKEY, DOWN, ESC, RETURN, TAB, UP } from '../constants';\nvar propTypes = {\n  /**\n   * Allows the creation of new selections on the fly. Note that any new items\n   * will be added to the list of selections, but not the list of original\n   * options unless handled as such by `Typeahead`'s parent.\n   *\n   * If a function is specified, it will be used to determine whether a custom\n   * option should be included. The return value should be true or false.\n   */\n  allowNew: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n\n  /**\n   * Autofocus the input when the component initially mounts.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * Whether or not filtering should be case-sensitive.\n   */\n  caseSensitive: checkPropType(PropTypes.bool, caseSensitiveType),\n\n  /**\n   * The initial value displayed in the text input.\n   */\n  defaultInputValue: checkPropType(PropTypes.string, defaultInputValueType),\n\n  /**\n   * Whether or not the menu is displayed upon initial render.\n   */\n  defaultOpen: PropTypes.bool,\n\n  /**\n   * Specify any pre-selected options. Use only if you want the component to\n   * be uncontrolled.\n   */\n  defaultSelected: checkPropType(PropTypes.arrayOf(optionType), defaultSelectedType),\n\n  /**\n   * Either an array of fields in `option` to search, or a custom filtering\n   * callback.\n   */\n  filterBy: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string.isRequired), PropTypes.func]),\n\n  /**\n   * Highlights the menu item if there is only one result and allows selecting\n   * that item by hitting enter. Does not work with `allowNew`.\n   */\n  highlightOnlyResult: checkPropType(PropTypes.bool, highlightOnlyResultType),\n\n  /**\n   * An html id attribute, required for assistive technologies such as screen\n   * readers.\n   */\n  id: checkPropType(PropTypes.oneOfType([PropTypes.number, PropTypes.string]), isRequiredForA11y),\n\n  /**\n   * Whether the filter should ignore accents and other diacritical marks.\n   */\n  ignoreDiacritics: checkPropType(PropTypes.bool, ignoreDiacriticsType),\n\n  /**\n   * Specify the option key to use for display or a function returning the\n   * display string. By default, the selector will use the `label` key.\n   */\n  labelKey: checkPropType(PropTypes.oneOfType([PropTypes.string, PropTypes.func]), labelKeyType),\n\n  /**\n   * Maximum number of results to display by default. Mostly done for\n   * performance reasons so as not to render too many DOM nodes in the case of\n   * large data sets.\n   */\n  maxResults: PropTypes.number,\n\n  /**\n   * Number of input characters that must be entered before showing results.\n   */\n  minLength: PropTypes.number,\n\n  /**\n   * Whether or not multiple selections are allowed.\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * Invoked when the input is blurred. Receives an event.\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Invoked whenever items are added or removed. Receives an array of the\n   * selected options.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Invoked when the input is focused. Receives an event.\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * Invoked when the input value changes. Receives the string value of the\n   * input.\n   */\n  onInputChange: PropTypes.func,\n\n  /**\n   * Invoked when a key is pressed. Receives an event.\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * Invoked when menu visibility changes.\n   */\n  onMenuToggle: PropTypes.func,\n\n  /**\n   * Invoked when the pagination menu item is clicked. Receives an event.\n   */\n  onPaginate: PropTypes.func,\n\n  /**\n   * Whether or not the menu should be displayed. `undefined` allows the\n   * component to control visibility, while `true` and `false` show and hide\n   * the menu, respectively.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * Full set of options, including pre-selected options. Must either be an\n   * array of objects (recommended) or strings.\n   */\n  options: PropTypes.arrayOf(optionType).isRequired,\n\n  /**\n   * Give user the ability to display additional results if the number of\n   * results exceeds `maxResults`.\n   */\n  paginate: PropTypes.bool,\n\n  /**\n   * The selected option(s) displayed in the input. Use this prop if you want\n   * to control the component via its parent.\n   */\n  selected: checkPropType(PropTypes.arrayOf(optionType), selectedType),\n\n  /**\n   * Allows selecting the hinted result by pressing enter.\n   */\n  selectHintOnEnter: deprecated(PropTypes.bool, 'Use the `shouldSelect` prop on the `Hint` component to define which ' + 'keystrokes can select the hint.')\n};\nvar defaultProps = {\n  allowNew: false,\n  autoFocus: false,\n  caseSensitive: false,\n  defaultInputValue: '',\n  defaultOpen: false,\n  defaultSelected: [],\n  filterBy: [],\n  highlightOnlyResult: false,\n  ignoreDiacritics: true,\n  labelKey: DEFAULT_LABELKEY,\n  maxResults: 100,\n  minLength: 0,\n  multiple: false,\n  onBlur: noop,\n  onFocus: noop,\n  onInputChange: noop,\n  onKeyDown: noop,\n  onMenuToggle: noop,\n  onPaginate: noop,\n  paginate: true\n};\nexport function getInitialState(props) {\n  var defaultInputValue = props.defaultInputValue,\n      defaultOpen = props.defaultOpen,\n      defaultSelected = props.defaultSelected,\n      maxResults = props.maxResults,\n      multiple = props.multiple;\n  var selected = props.selected ? props.selected.slice() : defaultSelected.slice();\n  var text = defaultInputValue;\n\n  if (!multiple && selected.length) {\n    // Set the text if an initial selection is passed in.\n    text = getOptionLabel(head(selected), props.labelKey);\n\n    if (selected.length > 1) {\n      // Limit to 1 selection in single-select mode.\n      selected = selected.slice(0, 1);\n    }\n  }\n\n  return {\n    activeIndex: -1,\n    activeItem: null,\n    initialItem: null,\n    isFocused: false,\n    selected: selected,\n    showMenu: defaultOpen,\n    shownResults: maxResults,\n    text: text\n  };\n}\nexport function clearTypeahead(state, props) {\n  return _extends({}, getInitialState(props), {\n    isFocused: state.isFocused,\n    selected: [],\n    text: ''\n  });\n}\nexport function hideMenu(state, props) {\n  var _getInitialState = getInitialState(props),\n      activeIndex = _getInitialState.activeIndex,\n      activeItem = _getInitialState.activeItem,\n      initialItem = _getInitialState.initialItem,\n      shownResults = _getInitialState.shownResults;\n\n  return {\n    activeIndex: activeIndex,\n    activeItem: activeItem,\n    initialItem: initialItem,\n    showMenu: false,\n    shownResults: shownResults\n  };\n}\nexport function toggleMenu(state, props) {\n  return state.showMenu ? hideMenu(state, props) : {\n    showMenu: true\n  };\n}\n\nvar Typeahead = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Typeahead, _React$Component);\n\n  function Typeahead() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", getInitialState(_this.props));\n\n    _defineProperty(_assertThisInitialized(_this), \"inputNode\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"isMenuShown\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"items\", []);\n\n    _defineProperty(_assertThisInitialized(_this), \"blur\", function () {\n      _this.inputNode && _this.inputNode.blur();\n\n      _this.hideMenu();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"clear\", function () {\n      _this.setState(clearTypeahead);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"focus\", function () {\n      _this.inputNode && _this.inputNode.focus();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getInput\", function () {\n      return _this.inputNode;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"inputRef\", function (inputNode) {\n      _this.inputNode = inputNode;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setItem\", function (item, position) {\n      _this.items[position] = item;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"hideMenu\", function () {\n      _this.setState(hideMenu);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"toggleMenu\", function () {\n      _this.setState(toggleMenu);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleActiveIndexChange\", function (activeIndex) {\n      _this.setState(function (state) {\n        return {\n          activeIndex: activeIndex,\n          activeItem: activeIndex === -1 ? null : state.activeItem\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleActiveItemChange\", function (activeItem) {\n      // Don't update the active item if it hasn't changed.\n      if (!isEqual(activeItem, _this.state.activeItem)) {\n        _this.setState({\n          activeItem: activeItem\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleBlur\", function (e) {\n      e.persist();\n\n      _this.setState({\n        isFocused: false\n      }, function () {\n        return _this.props.onBlur(e);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleChange\", function (selected) {\n      _this.props.onChange && _this.props.onChange(selected);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleClear\", function () {\n      _this.setState(clearTypeahead, function () {\n        return _this._handleChange([]);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleFocus\", function (e) {\n      e.persist();\n\n      _this.setState({\n        isFocused: true,\n        showMenu: true\n      }, function () {\n        return _this.props.onFocus(e);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleInitialItemChange\", function (initialItem) {\n      // Don't update the initial item if it hasn't changed.\n      if (!isEqual(initialItem, _this.state.initialItem)) {\n        _this.setState({\n          initialItem: initialItem\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleInputChange\", function (e) {\n      e.persist();\n      var text = e.currentTarget.value;\n      var _this$props = _this.props,\n          multiple = _this$props.multiple,\n          onInputChange = _this$props.onInputChange; // Clear selections when the input value changes in single-select mode.\n\n      var shouldClearSelections = _this.state.selected.length && !multiple;\n\n      _this.setState(function (state, props) {\n        var _getInitialState2 = getInitialState(props),\n            activeIndex = _getInitialState2.activeIndex,\n            activeItem = _getInitialState2.activeItem,\n            shownResults = _getInitialState2.shownResults;\n\n        return {\n          activeIndex: activeIndex,\n          activeItem: activeItem,\n          selected: shouldClearSelections ? [] : state.selected,\n          showMenu: true,\n          shownResults: shownResults,\n          text: text\n        };\n      }, function () {\n        onInputChange(text, e);\n        shouldClearSelections && _this._handleChange([]);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleKeyDown\", function (e) {\n      var activeItem = _this.state.activeItem; // Skip most actions when the menu is hidden.\n\n      if (!_this.isMenuShown) {\n        if (e.keyCode === UP || e.keyCode === DOWN) {\n          _this.setState({\n            showMenu: true\n          });\n        }\n\n        _this.props.onKeyDown(e);\n\n        return;\n      }\n\n      switch (e.keyCode) {\n        case UP:\n        case DOWN:\n          // Prevent input cursor from going to the beginning when pressing up.\n          e.preventDefault();\n\n          _this._handleActiveIndexChange(getUpdatedActiveIndex(_this.state.activeIndex, e.keyCode, _this.items));\n\n          break;\n\n        case RETURN:\n          // Prevent form submission while menu is open.\n          e.preventDefault();\n          activeItem && _this._handleMenuItemSelect(activeItem, e);\n          break;\n\n        case ESC:\n        case TAB:\n          // ESC simply hides the menu. TAB will blur the input and move focus to\n          // the next item; hide the menu so it doesn't gain focus.\n          _this.hideMenu();\n\n          break;\n\n        default:\n          break;\n      }\n\n      _this.props.onKeyDown(e);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleMenuItemSelect\", function (option, e) {\n      if (option.paginationOption) {\n        _this._handlePaginate(e);\n      } else {\n        _this._handleSelectionAdd(option);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handlePaginate\", function (e) {\n      e.persist();\n\n      _this.setState(function (state, props) {\n        return {\n          shownResults: state.shownResults + props.maxResults\n        };\n      }, function () {\n        return _this.props.onPaginate(e, _this.state.shownResults);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleSelectionAdd\", function (option) {\n      var _this$props2 = _this.props,\n          multiple = _this$props2.multiple,\n          labelKey = _this$props2.labelKey;\n      var selected;\n      var selection = option;\n      var text; // Add a unique id to the custom selection. Avoid doing this in `render` so\n      // the id doesn't increment every time.\n\n      if (!isString(selection) && selection.customOption) {\n        selection = _extends({}, selection, {\n          id: uniqueId('new-id-')\n        });\n      }\n\n      if (multiple) {\n        // If multiple selections are allowed, add the new selection to the\n        // existing selections.\n        selected = _this.state.selected.concat(selection);\n        text = '';\n      } else {\n        // If only a single selection is allowed, replace the existing selection\n        // with the new one.\n        selected = [selection];\n        text = getOptionLabel(selection, labelKey);\n      }\n\n      _this.setState(function (state, props) {\n        return _extends({}, hideMenu(state, props), {\n          initialItem: selection,\n          selected: selected,\n          text: text\n        });\n      }, function () {\n        return _this._handleChange(selected);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleSelectionRemove\", function (selection) {\n      var selected = _this.state.selected.filter(function (option) {\n        return !isEqual(option, selection);\n      }); // Make sure the input stays focused after the item is removed.\n\n\n      _this.focus();\n\n      _this.setState(function (state, props) {\n        return _extends({}, hideMenu(state, props), {\n          selected: selected\n        });\n      }, function () {\n        return _this._handleChange(selected);\n      });\n    });\n\n    return _this;\n  }\n\n  var _proto = Typeahead.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.props.autoFocus && this.focus();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n    var _this$props3 = this.props,\n        labelKey = _this$props3.labelKey,\n        multiple = _this$props3.multiple,\n        selected = _this$props3.selected;\n    validateSelectedPropChange(selected, prevProps.selected); // Sync selections in state with those in props.\n\n    if (selected && !isEqual(selected, prevState.selected)) {\n      this.setState({\n        selected: selected\n      });\n\n      if (!multiple) {\n        this.setState({\n          text: selected.length ? getOptionLabel(head(selected), labelKey) : ''\n        });\n      }\n    }\n  };\n\n  _proto.render = function render() {\n    // Omit `onChange` so Flow doesn't complain.\n    var _this$props4 = this.props,\n        onChange = _this$props4.onChange,\n        otherProps = _objectWithoutPropertiesLoose(_this$props4, [\"onChange\"]);\n\n    var mergedPropsAndState = _extends({}, otherProps, this.state);\n\n    var filterBy = mergedPropsAndState.filterBy,\n        labelKey = mergedPropsAndState.labelKey,\n        options = mergedPropsAndState.options,\n        paginate = mergedPropsAndState.paginate,\n        shownResults = mergedPropsAndState.shownResults,\n        text = mergedPropsAndState.text;\n    this.isMenuShown = isShown(mergedPropsAndState);\n    this.items = []; // Reset items on re-render.\n\n    var results = [];\n\n    if (this.isMenuShown) {\n      var cb = typeof filterBy === 'function' ? filterBy : defaultFilterBy;\n      results = options.filter(function (option) {\n        return cb(option, mergedPropsAndState);\n      }); // This must come before results are truncated.\n\n      var shouldPaginate = paginate && results.length > shownResults; // Truncate results if necessary.\n\n      results = getTruncatedOptions(results, shownResults); // Add the custom option if necessary.\n\n      if (addCustomOption(results, mergedPropsAndState)) {\n        var _results$push;\n\n        results.push((_results$push = {\n          customOption: true\n        }, _results$push[getStringLabelKey(labelKey)] = text, _results$push));\n      } // Add the pagination item if necessary.\n\n\n      if (shouldPaginate) {\n        var _results$push2;\n\n        results.push((_results$push2 = {}, _results$push2[getStringLabelKey(labelKey)] = '', _results$push2.paginationOption = true, _results$push2));\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(TypeaheadManager, _extends({}, mergedPropsAndState, {\n      hideMenu: this.hideMenu,\n      inputNode: this.inputNode,\n      inputRef: this.inputRef,\n      isMenuShown: this.isMenuShown,\n      onActiveItemChange: this._handleActiveItemChange,\n      onAdd: this._handleSelectionAdd,\n      onBlur: this._handleBlur,\n      onChange: this._handleInputChange,\n      onClear: this._handleClear,\n      onFocus: this._handleFocus,\n      onHide: this.hideMenu,\n      onInitialItemChange: this._handleInitialItemChange,\n      onKeyDown: this._handleKeyDown,\n      onMenuItemClick: this._handleMenuItemSelect,\n      onRemove: this._handleSelectionRemove,\n      results: results,\n      setItem: this.setItem,\n      toggleMenu: this.toggleMenu\n    }));\n  };\n\n  return Typeahead;\n}(React.Component);\n\n_defineProperty(Typeahead, \"propTypes\", propTypes);\n\n_defineProperty(Typeahead, \"defaultProps\", defaultProps);\n\nexport default Typeahead;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
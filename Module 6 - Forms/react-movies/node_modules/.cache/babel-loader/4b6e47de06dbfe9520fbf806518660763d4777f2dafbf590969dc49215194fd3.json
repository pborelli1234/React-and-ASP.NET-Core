{"ast":null,"code":"var _jsxFileName = \"C:\\\\Training\\\\React-and-ASP.NET-Core\\\\Module 6 - Forms\\\\react-movies\\\\src\\\\genres\\\\CreateGenre.tsx\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"../utils/Button\";\nimport { Field, Form, Formik } from \"formik\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CreateGenre() {\n  //const history = useHistory();\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create Genre\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        name: ''\n      },\n      onSubmit: value => {\n        // when the form is posted\n        console.log(value);\n      },\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        placeholder: undefined,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            name: \"name\",\n            id: \"name\",\n            className: \"form-control\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn btn-secondary\",\n          to: \"/genres\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_c = CreateGenre;\nvar _c;\n$RefreshReg$(_c, \"CreateGenre\");","map":{"version":3,"names":["Link","Button","Field","Form","Formik","jsxDEV","_jsxDEV","Fragment","_Fragment","CreateGenre","children","fileName","_jsxFileName","lineNumber","columnNumber","initialValues","name","onSubmit","value","console","log","placeholder","undefined","className","htmlFor","id","type","to","_c","$RefreshReg$"],"sources":["C:/Training/React-and-ASP.NET-Core/Module 6 - Forms/react-movies/src/genres/CreateGenre.tsx"],"sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport Button from \"../utils/Button\";\r\nimport { Field, Form, Formik } from \"formik\";\r\n\r\nexport default function CreateGenre() {\r\n    //const history = useHistory();\r\n\r\n    return (\r\n        <>\r\n            <h3>Create Genre</h3>\r\n\r\n            <Formik initialValues={{\r\n                name: ''\r\n            }}\r\n            onSubmit={value => {\r\n                // when the form is posted\r\n                console.log(value);\r\n            }}\r\n            >\r\n                <Form placeholder={undefined}>\r\n                    <div className=\"mb-3\">\r\n                        <label htmlFor=\"name\">Name</label>\r\n                        <Field name=\"name\" id=\"name\" className=\"form-control\" />\r\n                    </div>\r\n\r\n                    <Button type='submit'>Save Changes</Button>\r\n                    <Link className=\"btn btn-secondary\" to=\"/genres\">Cancel</Link>\r\n                </Form>\r\n            </Formik>\r\n        </>\r\n    )\r\n}"],"mappings":";AAAA,SAASA,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,MAAM,MAAM,iBAAiB;AACpC,SAASC,KAAK,EAAEC,IAAI,EAAEC,MAAM,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE7C,eAAe,SAASC,WAAWA,CAAA,EAAG;EAClC;;EAEA,oBACIH,OAAA,CAAAE,SAAA;IAAAE,QAAA,gBACIJ,OAAA;MAAAI,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAErBR,OAAA,CAACF,MAAM;MAACW,aAAa,EAAE;QACnBC,IAAI,EAAE;MACV,CAAE;MACFC,QAAQ,EAAEC,KAAK,IAAI;QACf;QACAC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACtB,CAAE;MAAAR,QAAA,eAEEJ,OAAA,CAACH,IAAI;QAACkB,WAAW,EAAEC,SAAU;QAAAZ,QAAA,gBACzBJ,OAAA;UAAKiB,SAAS,EAAC,MAAM;UAAAb,QAAA,gBACjBJ,OAAA;YAAOkB,OAAO,EAAC,MAAM;YAAAd,QAAA,EAAC;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAClCR,OAAA,CAACJ,KAAK;YAACc,IAAI,EAAC,MAAM;YAACS,EAAE,EAAC,MAAM;YAACF,SAAS,EAAC;UAAc;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvD,CAAC,eAENR,OAAA,CAACL,MAAM;UAACyB,IAAI,EAAC,QAAQ;UAAAhB,QAAA,EAAC;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC3CR,OAAA,CAACN,IAAI;UAACuB,SAAS,EAAC,mBAAmB;UAACI,EAAE,EAAC,SAAS;UAAAjB,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA,eACX,CAAC;AAEX;AAACc,EAAA,GA3BuBnB,WAAW;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
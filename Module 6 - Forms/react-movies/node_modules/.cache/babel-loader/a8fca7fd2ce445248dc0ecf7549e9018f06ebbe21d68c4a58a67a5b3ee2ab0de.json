{"ast":null,"code":"import _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { Children } from 'react';\nimport { BaseMenuItem } from './MenuItem';\nimport { preventInputBlur } from '../utils';\nimport { checkPropType, isRequiredForA11y } from '../propTypes';\nvar MenuDivider = function MenuDivider(props) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dropdown-divider\",\n    role: \"separator\"\n  });\n};\nvar MenuHeader = function MenuHeader(props) {\n  return (/*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/role-has-required-aria-props\n    React.createElement(\"div\", _extends({}, props, {\n      className: \"dropdown-header\",\n      role: \"heading\"\n    }))\n  );\n};\nvar propTypes = {\n  'aria-label': PropTypes.string,\n  /**\n   * Message to display in the menu if there are no valid results.\n   */\n  emptyLabel: PropTypes.node,\n  /**\n   * Needed for accessibility.\n   */\n  id: checkPropType(PropTypes.oneOfType([PropTypes.number, PropTypes.string]), isRequiredForA11y),\n  /**\n   * Maximum height of the dropdown menu.\n   */\n  maxHeight: PropTypes.string\n};\nvar defaultProps = {\n  'aria-label': 'menu-options',\n  emptyLabel: 'No matches found.',\n  maxHeight: '300px'\n};\n\n/**\n * Menu component that handles empty state when passed a set of results.\n */\nvar Menu = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Menu, _React$Component);\n  function Menu() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n  var _proto = Menu.prototype;\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var _this$props = this.props,\n      inputHeight = _this$props.inputHeight,\n      scheduleUpdate = _this$props.scheduleUpdate; // Update the menu position if the height of the input changes.\n\n    if (inputHeight !== prevProps.inputHeight) {\n      scheduleUpdate();\n    }\n  };\n  _proto.render = function render() {\n    var _this$props2 = this.props,\n      children = _this$props2.children,\n      className = _this$props2.className,\n      emptyLabel = _this$props2.emptyLabel,\n      id = _this$props2.id,\n      innerRef = _this$props2.innerRef,\n      maxHeight = _this$props2.maxHeight,\n      style = _this$props2.style,\n      text = _this$props2.text;\n    var contents = Children.count(children) === 0 ? /*#__PURE__*/React.createElement(BaseMenuItem, {\n      disabled: true,\n      role: \"option\"\n    }, emptyLabel) : children;\n    return /*#__PURE__*/ /* eslint-disable jsx-a11y/interactive-supports-focus */React.createElement(\"div\", {\n      \"aria-label\": this.props['aria-label'],\n      className: cx('rbt-menu', 'dropdown-menu', 'show', className),\n      id: id,\n      key:\n      // Force a re-render if the text changes to ensure that menu\n      // positioning updates correctly.\n      text,\n      onMouseDown:\n      // Prevent input from blurring when clicking on the menu scrollbar.\n      preventInputBlur,\n      ref: innerRef,\n      role: \"listbox\",\n      style: _extends({}, style, {\n        display: 'block',\n        maxHeight: maxHeight,\n        overflow: 'auto'\n      })\n    }, contents)\n    /* eslint-enable jsx-a11y/interactive-supports-focus */;\n  };\n  return Menu;\n}(React.Component);\n_defineProperty(Menu, \"propTypes\", propTypes);\n_defineProperty(Menu, \"defaultProps\", defaultProps);\n_defineProperty(Menu, \"Divider\", MenuDivider);\n_defineProperty(Menu, \"Header\", MenuHeader);\nexport default Menu;","map":{"version":3,"names":["_inheritsLoose","_defineProperty","_extends","cx","PropTypes","React","Children","BaseMenuItem","preventInputBlur","checkPropType","isRequiredForA11y","MenuDivider","props","createElement","className","role","MenuHeader","propTypes","string","emptyLabel","node","id","oneOfType","number","maxHeight","defaultProps","Menu","_React$Component","apply","arguments","_proto","prototype","componentDidUpdate","prevProps","_this$props","inputHeight","scheduleUpdate","render","_this$props2","children","innerRef","style","text","contents","count","disabled","key","onMouseDown","ref","display","overflow","Component"],"sources":["C:/Training/React-and-ASP.NET-Core/Module 6 - Forms/react-movies/node_modules/react-bootstrap-typeahead/es/components/Menu.js"],"sourcesContent":["import _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { Children } from 'react';\nimport { BaseMenuItem } from './MenuItem';\nimport { preventInputBlur } from '../utils';\nimport { checkPropType, isRequiredForA11y } from '../propTypes';\n\nvar MenuDivider = function MenuDivider(props) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dropdown-divider\",\n    role: \"separator\"\n  });\n};\n\nvar MenuHeader = function MenuHeader(props) {\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/role-has-required-aria-props\n    React.createElement(\"div\", _extends({}, props, {\n      className: \"dropdown-header\",\n      role: \"heading\"\n    }))\n  );\n};\n\nvar propTypes = {\n  'aria-label': PropTypes.string,\n\n  /**\n   * Message to display in the menu if there are no valid results.\n   */\n  emptyLabel: PropTypes.node,\n\n  /**\n   * Needed for accessibility.\n   */\n  id: checkPropType(PropTypes.oneOfType([PropTypes.number, PropTypes.string]), isRequiredForA11y),\n\n  /**\n   * Maximum height of the dropdown menu.\n   */\n  maxHeight: PropTypes.string\n};\nvar defaultProps = {\n  'aria-label': 'menu-options',\n  emptyLabel: 'No matches found.',\n  maxHeight: '300px'\n};\n\n/**\n * Menu component that handles empty state when passed a set of results.\n */\nvar Menu = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Menu, _React$Component);\n\n  function Menu() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Menu.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var _this$props = this.props,\n        inputHeight = _this$props.inputHeight,\n        scheduleUpdate = _this$props.scheduleUpdate; // Update the menu position if the height of the input changes.\n\n    if (inputHeight !== prevProps.inputHeight) {\n      scheduleUpdate();\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props2 = this.props,\n        children = _this$props2.children,\n        className = _this$props2.className,\n        emptyLabel = _this$props2.emptyLabel,\n        id = _this$props2.id,\n        innerRef = _this$props2.innerRef,\n        maxHeight = _this$props2.maxHeight,\n        style = _this$props2.style,\n        text = _this$props2.text;\n    var contents = Children.count(children) === 0 ? /*#__PURE__*/React.createElement(BaseMenuItem, {\n      disabled: true,\n      role: \"option\"\n    }, emptyLabel) : children;\n    return (\n      /*#__PURE__*/\n\n      /* eslint-disable jsx-a11y/interactive-supports-focus */\n      React.createElement(\"div\", {\n        \"aria-label\": this.props['aria-label'],\n        className: cx('rbt-menu', 'dropdown-menu', 'show', className),\n        id: id,\n        key: // Force a re-render if the text changes to ensure that menu\n        // positioning updates correctly.\n        text,\n        onMouseDown: // Prevent input from blurring when clicking on the menu scrollbar.\n        preventInputBlur,\n        ref: innerRef,\n        role: \"listbox\",\n        style: _extends({}, style, {\n          display: 'block',\n          maxHeight: maxHeight,\n          overflow: 'auto'\n        })\n      }, contents)\n      /* eslint-enable jsx-a11y/interactive-supports-focus */\n\n    );\n  };\n\n  return Menu;\n}(React.Component);\n\n_defineProperty(Menu, \"propTypes\", propTypes);\n\n_defineProperty(Menu, \"defaultProps\", defaultProps);\n\n_defineProperty(Menu, \"Divider\", MenuDivider);\n\n_defineProperty(Menu, \"Header\", MenuHeader);\n\nexport default Menu;"],"mappings":"AAAA,OAAOA,cAAc,MAAM,sCAAsC;AACjE,OAAOC,eAAe,MAAM,uCAAuC;AACnE,OAAOC,QAAQ,MAAM,gCAAgC;AACrD,OAAOC,EAAE,MAAM,YAAY;AAC3B,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,YAAY,QAAQ,YAAY;AACzC,SAASC,gBAAgB,QAAQ,UAAU;AAC3C,SAASC,aAAa,EAAEC,iBAAiB,QAAQ,cAAc;AAE/D,IAAIC,WAAW,GAAG,SAASA,WAAWA,CAACC,KAAK,EAAE;EAC5C,OAAO,aAAaP,KAAK,CAACQ,aAAa,CAAC,KAAK,EAAE;IAC7CC,SAAS,EAAE,kBAAkB;IAC7BC,IAAI,EAAE;EACR,CAAC,CAAC;AACJ,CAAC;AAED,IAAIC,UAAU,GAAG,SAASA,UAAUA,CAACJ,KAAK,EAAE;EAC1C,QACE;IACA;IACAP,KAAK,CAACQ,aAAa,CAAC,KAAK,EAAEX,QAAQ,CAAC,CAAC,CAAC,EAAEU,KAAK,EAAE;MAC7CE,SAAS,EAAE,iBAAiB;MAC5BC,IAAI,EAAE;IACR,CAAC,CAAC;EAAC;AAEP,CAAC;AAED,IAAIE,SAAS,GAAG;EACd,YAAY,EAAEb,SAAS,CAACc,MAAM;EAE9B;AACF;AACA;EACEC,UAAU,EAAEf,SAAS,CAACgB,IAAI;EAE1B;AACF;AACA;EACEC,EAAE,EAAEZ,aAAa,CAACL,SAAS,CAACkB,SAAS,CAAC,CAAClB,SAAS,CAACmB,MAAM,EAAEnB,SAAS,CAACc,MAAM,CAAC,CAAC,EAAER,iBAAiB,CAAC;EAE/F;AACF;AACA;EACEc,SAAS,EAAEpB,SAAS,CAACc;AACvB,CAAC;AACD,IAAIO,YAAY,GAAG;EACjB,YAAY,EAAE,cAAc;EAC5BN,UAAU,EAAE,mBAAmB;EAC/BK,SAAS,EAAE;AACb,CAAC;;AAED;AACA;AACA;AACA,IAAIE,IAAI,GAAG,aAAa,UAAUC,gBAAgB,EAAE;EAClD3B,cAAc,CAAC0B,IAAI,EAAEC,gBAAgB,CAAC;EAEtC,SAASD,IAAIA,CAAA,EAAG;IACd,OAAOC,gBAAgB,CAACC,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC,IAAI,IAAI;EACxD;EAEA,IAAIC,MAAM,GAAGJ,IAAI,CAACK,SAAS;EAE3BD,MAAM,CAACE,kBAAkB,GAAG,SAASA,kBAAkBA,CAACC,SAAS,EAAE;IACjE,IAAIC,WAAW,GAAG,IAAI,CAACtB,KAAK;MACxBuB,WAAW,GAAGD,WAAW,CAACC,WAAW;MACrCC,cAAc,GAAGF,WAAW,CAACE,cAAc,CAAC,CAAC;;IAEjD,IAAID,WAAW,KAAKF,SAAS,CAACE,WAAW,EAAE;MACzCC,cAAc,CAAC,CAAC;IAClB;EACF,CAAC;EAEDN,MAAM,CAACO,MAAM,GAAG,SAASA,MAAMA,CAAA,EAAG;IAChC,IAAIC,YAAY,GAAG,IAAI,CAAC1B,KAAK;MACzB2B,QAAQ,GAAGD,YAAY,CAACC,QAAQ;MAChCzB,SAAS,GAAGwB,YAAY,CAACxB,SAAS;MAClCK,UAAU,GAAGmB,YAAY,CAACnB,UAAU;MACpCE,EAAE,GAAGiB,YAAY,CAACjB,EAAE;MACpBmB,QAAQ,GAAGF,YAAY,CAACE,QAAQ;MAChChB,SAAS,GAAGc,YAAY,CAACd,SAAS;MAClCiB,KAAK,GAAGH,YAAY,CAACG,KAAK;MAC1BC,IAAI,GAAGJ,YAAY,CAACI,IAAI;IAC5B,IAAIC,QAAQ,GAAGrC,QAAQ,CAACsC,KAAK,CAACL,QAAQ,CAAC,KAAK,CAAC,GAAG,aAAalC,KAAK,CAACQ,aAAa,CAACN,YAAY,EAAE;MAC7FsC,QAAQ,EAAE,IAAI;MACd9B,IAAI,EAAE;IACR,CAAC,EAAEI,UAAU,CAAC,GAAGoB,QAAQ;IACzB,OACE,cAEA,wDACAlC,KAAK,CAACQ,aAAa,CAAC,KAAK,EAAE;MACzB,YAAY,EAAE,IAAI,CAACD,KAAK,CAAC,YAAY,CAAC;MACtCE,SAAS,EAAEX,EAAE,CAAC,UAAU,EAAE,eAAe,EAAE,MAAM,EAAEW,SAAS,CAAC;MAC7DO,EAAE,EAAEA,EAAE;MACNyB,GAAG;MAAE;MACL;MACAJ,IAAI;MACJK,WAAW;MAAE;MACbvC,gBAAgB;MAChBwC,GAAG,EAAER,QAAQ;MACbzB,IAAI,EAAE,SAAS;MACf0B,KAAK,EAAEvC,QAAQ,CAAC,CAAC,CAAC,EAAEuC,KAAK,EAAE;QACzBQ,OAAO,EAAE,OAAO;QAChBzB,SAAS,EAAEA,SAAS;QACpB0B,QAAQ,EAAE;MACZ,CAAC;IACH,CAAC,EAAEP,QAAQ;IACX;EAGJ,CAAC;EAED,OAAOjB,IAAI;AACb,CAAC,CAACrB,KAAK,CAAC8C,SAAS,CAAC;AAElBlD,eAAe,CAACyB,IAAI,EAAE,WAAW,EAAET,SAAS,CAAC;AAE7ChB,eAAe,CAACyB,IAAI,EAAE,cAAc,EAAED,YAAY,CAAC;AAEnDxB,eAAe,CAACyB,IAAI,EAAE,SAAS,EAAEf,WAAW,CAAC;AAE7CV,eAAe,CAACyB,IAAI,EAAE,QAAQ,EAAEV,UAAU,CAAC;AAE3C,eAAeU,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
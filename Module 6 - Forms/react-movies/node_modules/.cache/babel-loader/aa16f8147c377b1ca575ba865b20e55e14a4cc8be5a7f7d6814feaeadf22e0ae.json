{"ast":null,"code":"var _jsxFileName = \"C:\\\\Training\\\\React-and-ASP.NET-Core\\\\Module 6 - Forms\\\\react-movies\\\\src\\\\movies\\\\EditMovie.tsx\",\n  _s = $RefreshSig$();\nimport { useParams } from \"react-router-dom\";\nimport MovieForm from \"./MovieForm\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function EditMovie() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const nonSelectedGenres = [{\n    id: 2,\n    name: 'Action'\n  }];\n  const selectedGenres = [{\n    id: 1,\n    name: 'Comedy'\n  }];\n  const nonSelectedMovieTheaters = [{\n    id: 1,\n    name: 'Cradlestone'\n  }, {\n    id: 3,\n    name: 'Hyde Park'\n  }];\n  const selectedMovieTheaters = [{\n    id: 2,\n    name: 'Cresta'\n  }, {\n    id: 4,\n    name: 'Fourways'\n  }];\n  const selectedActors = [{\n    id: 1,\n    name: 'Felipe',\n    character: 'Geralt',\n    picture: 'https://upload.wikimedia.org/wikipedia/commons/thumb/3/3c/Tom_Holland_by_Gage_Skidmore.jpg/220px-Tom_Holland_by_Gage_Skidmore.jpg'\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Edit Movie\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MovieForm, {\n      model: {\n        title: 'Gladiator II',\n        inTheaters: true,\n        trailer: 'https://www.youtube.com/watch?v=4rgYUipGJNo',\n        releaseDate: new Date('2024-11-01T00:00:00')\n      },\n      onSubmit: values => console.log(values),\n      nonSelectedGenres: nonSelectedGenres,\n      selectedGenres: selectedGenres,\n      nonSelectedMovieTheaters: nonSelectedMovieTheaters,\n      selectedMovieTheaters: selectedMovieTheaters,\n      selectedActors: selectedActors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(EditMovie, \"2iuhNW6CE75WTTBH924B2fZ53X0=\", false, function () {\n  return [useParams];\n});\n_c = EditMovie;\nvar _c;\n$RefreshReg$(_c, \"EditMovie\");","map":{"version":3,"names":["useParams","MovieForm","jsxDEV","_jsxDEV","Fragment","_Fragment","EditMovie","_s","id","nonSelectedGenres","name","selectedGenres","nonSelectedMovieTheaters","selectedMovieTheaters","selectedActors","character","picture","children","fileName","_jsxFileName","lineNumber","columnNumber","model","title","inTheaters","trailer","releaseDate","Date","onSubmit","values","console","log","_c","$RefreshReg$"],"sources":["C:/Training/React-and-ASP.NET-Core/Module 6 - Forms/react-movies/src/movies/EditMovie.tsx"],"sourcesContent":["import { useParams } from \"react-router-dom\";\r\nimport MovieForm from \"./MovieForm\";\r\nimport { genreDTO } from \"../genres/genres.model\";\r\nimport { movieTheaterDTO } from \"../movietheaters/movieTheater.model\";\r\nimport { actorMovieDTO } from \"../actors/actors.model\";\r\n\r\nexport default function EditMovie() {\r\n    const {id}: any = useParams();\r\n\r\n    const nonSelectedGenres: genreDTO[] = [{id: 2, name: 'Action'}]\r\n    const selectedGenres: genreDTO[] = [{id: 1, name: 'Comedy'}]    \r\n    const nonSelectedMovieTheaters: movieTheaterDTO[] = [{id: 1, name: 'Cradlestone'},{id: 3, name: 'Hyde Park'}];\r\n    const selectedMovieTheaters: movieTheaterDTO[] = [{id: 2, name: 'Cresta'},{id: 4, name: 'Fourways'}];\r\n\r\n    const selectedActors: actorMovieDTO[] = [\r\n        {id: 1, name: 'Felipe', character: 'Geralt', picture: 'https://upload.wikimedia.org/wikipedia/commons/thumb/3/3c/Tom_Holland_by_Gage_Skidmore.jpg/220px-Tom_Holland_by_Gage_Skidmore.jpg'}\r\n    ]\r\n    \r\n    return (\r\n        <>\r\n            <h3>Edit Movie</h3>\r\n\r\n            <MovieForm model={{title: 'Gladiator II', inTheaters: true, trailer: 'https://www.youtube.com/watch?v=4rgYUipGJNo',\r\n                releaseDate: new Date('2024-11-01T00:00:00')\r\n            }} \r\n                onSubmit={values => console.log(values)}\r\n                nonSelectedGenres={nonSelectedGenres}\r\n                selectedGenres={selectedGenres}\r\n                nonSelectedMovieTheaters={nonSelectedMovieTheaters}\r\n                selectedMovieTheaters={selectedMovieTheaters}\r\n                selectedActors={selectedActors}\r\n            />\r\n        </>\r\n    )\r\n}"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAKpC,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAChC,MAAM;IAACC;EAAO,CAAC,GAAGR,SAAS,CAAC,CAAC;EAE7B,MAAMS,iBAA6B,GAAG,CAAC;IAACD,EAAE,EAAE,CAAC;IAAEE,IAAI,EAAE;EAAQ,CAAC,CAAC;EAC/D,MAAMC,cAA0B,GAAG,CAAC;IAACH,EAAE,EAAE,CAAC;IAAEE,IAAI,EAAE;EAAQ,CAAC,CAAC;EAC5D,MAAME,wBAA2C,GAAG,CAAC;IAACJ,EAAE,EAAE,CAAC;IAAEE,IAAI,EAAE;EAAa,CAAC,EAAC;IAACF,EAAE,EAAE,CAAC;IAAEE,IAAI,EAAE;EAAW,CAAC,CAAC;EAC7G,MAAMG,qBAAwC,GAAG,CAAC;IAACL,EAAE,EAAE,CAAC;IAAEE,IAAI,EAAE;EAAQ,CAAC,EAAC;IAACF,EAAE,EAAE,CAAC;IAAEE,IAAI,EAAE;EAAU,CAAC,CAAC;EAEpG,MAAMI,cAA+B,GAAG,CACpC;IAACN,EAAE,EAAE,CAAC;IAAEE,IAAI,EAAE,QAAQ;IAAEK,SAAS,EAAE,QAAQ;IAAEC,OAAO,EAAE;EAAmI,CAAC,CAC7L;EAED,oBACIb,OAAA,CAAAE,SAAA;IAAAY,QAAA,gBACId,OAAA;MAAAc,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEnBlB,OAAA,CAACF,SAAS;MAACqB,KAAK,EAAE;QAACC,KAAK,EAAE,cAAc;QAAEC,UAAU,EAAE,IAAI;QAAEC,OAAO,EAAE,6CAA6C;QAC9GC,WAAW,EAAE,IAAIC,IAAI,CAAC,qBAAqB;MAC/C,CAAE;MACEC,QAAQ,EAAEC,MAAM,IAAIC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAE;MACxCpB,iBAAiB,EAAEA,iBAAkB;MACrCE,cAAc,EAAEA,cAAe;MAC/BC,wBAAwB,EAAEA,wBAAyB;MACnDC,qBAAqB,EAAEA,qBAAsB;MAC7CC,cAAc,EAAEA;IAAe;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC;EAAA,eACJ,CAAC;AAEX;AAACd,EAAA,CA5BuBD,SAAS;EAAA,QACXN,SAAS;AAAA;AAAAgC,EAAA,GADP1B,SAAS;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
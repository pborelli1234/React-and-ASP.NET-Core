{"ast":null,"code":"import PropTypes from 'prop-types';\nimport { isFunction, values, warn } from './utils';\nimport { SIZE } from './constants';\nvar INPUT_PROPS_BLACKLIST = [{\n  alt: 'onBlur',\n  prop: 'onBlur'\n}, {\n  alt: 'onInputChange',\n  prop: 'onChange'\n}, {\n  alt: 'onFocus',\n  prop: 'onFocus'\n}, {\n  alt: 'onKeyDown',\n  prop: 'onKeyDown'\n}];\nexport var sizeType = PropTypes.oneOf(values(SIZE));\n/**\n * Allows additional warnings or messaging related to prop validation.\n */\n\nexport function checkPropType(validator, callback) {\n  return function (props, propName, componentName) {\n    var _PropTypes$checkPropT;\n    PropTypes.checkPropTypes((_PropTypes$checkPropT = {}, _PropTypes$checkPropT[propName] = validator, _PropTypes$checkPropT), props, 'prop', componentName);\n    isFunction(callback) && callback(props, propName, componentName);\n  };\n}\nexport function caseSensitiveType(props, propName, componentName) {\n  var caseSensitive = props.caseSensitive,\n    filterBy = props.filterBy;\n  warn(!caseSensitive || typeof filterBy !== 'function', 'Your `filterBy` function will override the `caseSensitive` prop.');\n}\nexport function deprecated(validator, reason) {\n  return function (props, propName, componentName) {\n    var _PropTypes$checkPropT2;\n    if (props[propName] != null) {\n      warn(false, \"The `\" + propName + \"` prop is deprecated. \" + reason);\n    }\n    return PropTypes.checkPropTypes((_PropTypes$checkPropT2 = {}, _PropTypes$checkPropT2[propName] = validator, _PropTypes$checkPropT2), props, 'prop', componentName);\n  };\n}\nexport function defaultInputValueType(props, propName, componentName) {\n  var defaultInputValue = props.defaultInputValue,\n    defaultSelected = props.defaultSelected,\n    multiple = props.multiple,\n    selected = props.selected;\n  var name = defaultSelected.length ? 'defaultSelected' : 'selected';\n  warn(!(!multiple && defaultInputValue && (defaultSelected.length || selected && selected.length)), \"`defaultInputValue` will be overridden by the value from `\" + name + \"`.\");\n}\nexport function defaultSelectedType(props, propName, componentName) {\n  var defaultSelected = props.defaultSelected,\n    multiple = props.multiple;\n  warn(multiple || defaultSelected.length <= 1, 'You are passing multiple options to the `defaultSelected` prop of a ' + 'Typeahead in single-select mode. The selections will be truncated to a ' + 'single selection.');\n}\nexport function highlightOnlyResultType(props, propName, componentName) {\n  var allowNew = props.allowNew,\n    highlightOnlyResult = props.highlightOnlyResult;\n  warn(!(highlightOnlyResult && allowNew), '`highlightOnlyResult` will not work with `allowNew`.');\n}\nexport function ignoreDiacriticsType(props, propName, componentName) {\n  var filterBy = props.filterBy,\n    ignoreDiacritics = props.ignoreDiacritics;\n  warn(ignoreDiacritics || typeof filterBy !== 'function', 'Your `filterBy` function will override the `ignoreDiacritics` prop.');\n}\nexport function inputPropsType(props, propName, componentName) {\n  var inputProps = props.inputProps;\n  if (!(inputProps && Object.prototype.toString.call(inputProps) === '[object Object]')) {\n    return;\n  } // Blacklisted properties.\n\n  INPUT_PROPS_BLACKLIST.forEach(function (_ref) {\n    var alt = _ref.alt,\n      prop = _ref.prop;\n    var msg = alt ? \" Use the top-level `\" + alt + \"` prop instead.\" : null;\n    warn(!inputProps[prop], \"The `\" + prop + \"` property of `inputProps` will be ignored.\" + msg);\n  });\n}\nexport function isRequiredForA11y(props, propName, componentName) {\n  warn(props[propName] != null, \"The prop `\" + propName + \"` is required to make `\" + componentName + \"` \" + 'accessible for users of assistive technologies such as screen readers.');\n}\nexport function labelKeyType(props, propName, componentName) {\n  var allowNew = props.allowNew,\n    labelKey = props.labelKey;\n  warn(!(isFunction(labelKey) && allowNew), '`labelKey` must be a string when `allowNew={true}`.');\n}\nexport var optionType = PropTypes.oneOfType([PropTypes.object, PropTypes.string]);\nexport function selectedType(props, propName, componentName) {\n  var multiple = props.multiple,\n    onChange = props.onChange,\n    selected = props.selected;\n  warn(multiple || !selected || selected.length <= 1, 'You are passing multiple options to the `selected` prop of a Typeahead ' + 'in single-select mode. This may lead to unexpected behaviors or errors.');\n  warn(!selected || selected && isFunction(onChange), 'You provided a `selected` prop without an `onChange` handler. If you ' + 'want the typeahead to be uncontrolled, use `defaultSelected`. ' + 'Otherwise, set `onChange`.');\n}","map":{"version":3,"names":["PropTypes","isFunction","values","warn","SIZE","INPUT_PROPS_BLACKLIST","alt","prop","sizeType","oneOf","checkPropType","validator","callback","props","propName","componentName","_PropTypes$checkPropT","checkPropTypes","caseSensitiveType","caseSensitive","filterBy","deprecated","reason","_PropTypes$checkPropT2","defaultInputValueType","defaultInputValue","defaultSelected","multiple","selected","name","length","defaultSelectedType","highlightOnlyResultType","allowNew","highlightOnlyResult","ignoreDiacriticsType","ignoreDiacritics","inputPropsType","inputProps","Object","prototype","toString","call","forEach","_ref","msg","isRequiredForA11y","labelKeyType","labelKey","optionType","oneOfType","object","string","selectedType","onChange"],"sources":["C:/Training/React-and-ASP.NET-Core/Module 6 - Forms/react-movies/node_modules/react-bootstrap-typeahead/es/propTypes.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { isFunction, values, warn } from './utils';\nimport { SIZE } from './constants';\nvar INPUT_PROPS_BLACKLIST = [{\n  alt: 'onBlur',\n  prop: 'onBlur'\n}, {\n  alt: 'onInputChange',\n  prop: 'onChange'\n}, {\n  alt: 'onFocus',\n  prop: 'onFocus'\n}, {\n  alt: 'onKeyDown',\n  prop: 'onKeyDown'\n}];\nexport var sizeType = PropTypes.oneOf(values(SIZE));\n/**\n * Allows additional warnings or messaging related to prop validation.\n */\n\nexport function checkPropType(validator, callback) {\n  return function (props, propName, componentName) {\n    var _PropTypes$checkPropT;\n\n    PropTypes.checkPropTypes((_PropTypes$checkPropT = {}, _PropTypes$checkPropT[propName] = validator, _PropTypes$checkPropT), props, 'prop', componentName);\n    isFunction(callback) && callback(props, propName, componentName);\n  };\n}\nexport function caseSensitiveType(props, propName, componentName) {\n  var caseSensitive = props.caseSensitive,\n      filterBy = props.filterBy;\n  warn(!caseSensitive || typeof filterBy !== 'function', 'Your `filterBy` function will override the `caseSensitive` prop.');\n}\nexport function deprecated(validator, reason) {\n  return function (props, propName, componentName) {\n    var _PropTypes$checkPropT2;\n\n    if (props[propName] != null) {\n      warn(false, \"The `\" + propName + \"` prop is deprecated. \" + reason);\n    }\n\n    return PropTypes.checkPropTypes((_PropTypes$checkPropT2 = {}, _PropTypes$checkPropT2[propName] = validator, _PropTypes$checkPropT2), props, 'prop', componentName);\n  };\n}\nexport function defaultInputValueType(props, propName, componentName) {\n  var defaultInputValue = props.defaultInputValue,\n      defaultSelected = props.defaultSelected,\n      multiple = props.multiple,\n      selected = props.selected;\n  var name = defaultSelected.length ? 'defaultSelected' : 'selected';\n  warn(!(!multiple && defaultInputValue && (defaultSelected.length || selected && selected.length)), \"`defaultInputValue` will be overridden by the value from `\" + name + \"`.\");\n}\nexport function defaultSelectedType(props, propName, componentName) {\n  var defaultSelected = props.defaultSelected,\n      multiple = props.multiple;\n  warn(multiple || defaultSelected.length <= 1, 'You are passing multiple options to the `defaultSelected` prop of a ' + 'Typeahead in single-select mode. The selections will be truncated to a ' + 'single selection.');\n}\nexport function highlightOnlyResultType(props, propName, componentName) {\n  var allowNew = props.allowNew,\n      highlightOnlyResult = props.highlightOnlyResult;\n  warn(!(highlightOnlyResult && allowNew), '`highlightOnlyResult` will not work with `allowNew`.');\n}\nexport function ignoreDiacriticsType(props, propName, componentName) {\n  var filterBy = props.filterBy,\n      ignoreDiacritics = props.ignoreDiacritics;\n  warn(ignoreDiacritics || typeof filterBy !== 'function', 'Your `filterBy` function will override the `ignoreDiacritics` prop.');\n}\nexport function inputPropsType(props, propName, componentName) {\n  var inputProps = props.inputProps;\n\n  if (!(inputProps && Object.prototype.toString.call(inputProps) === '[object Object]')) {\n    return;\n  } // Blacklisted properties.\n\n\n  INPUT_PROPS_BLACKLIST.forEach(function (_ref) {\n    var alt = _ref.alt,\n        prop = _ref.prop;\n    var msg = alt ? \" Use the top-level `\" + alt + \"` prop instead.\" : null;\n    warn(!inputProps[prop], \"The `\" + prop + \"` property of `inputProps` will be ignored.\" + msg);\n  });\n}\nexport function isRequiredForA11y(props, propName, componentName) {\n  warn(props[propName] != null, \"The prop `\" + propName + \"` is required to make `\" + componentName + \"` \" + 'accessible for users of assistive technologies such as screen readers.');\n}\nexport function labelKeyType(props, propName, componentName) {\n  var allowNew = props.allowNew,\n      labelKey = props.labelKey;\n  warn(!(isFunction(labelKey) && allowNew), '`labelKey` must be a string when `allowNew={true}`.');\n}\nexport var optionType = PropTypes.oneOfType([PropTypes.object, PropTypes.string]);\nexport function selectedType(props, propName, componentName) {\n  var multiple = props.multiple,\n      onChange = props.onChange,\n      selected = props.selected;\n  warn(multiple || !selected || selected.length <= 1, 'You are passing multiple options to the `selected` prop of a Typeahead ' + 'in single-select mode. This may lead to unexpected behaviors or errors.');\n  warn(!selected || selected && isFunction(onChange), 'You provided a `selected` prop without an `onChange` handler. If you ' + 'want the typeahead to be uncontrolled, use `defaultSelected`. ' + 'Otherwise, set `onChange`.');\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
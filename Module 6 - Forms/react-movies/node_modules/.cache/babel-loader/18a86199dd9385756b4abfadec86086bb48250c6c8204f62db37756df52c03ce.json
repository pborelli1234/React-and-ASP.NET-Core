{"ast":null,"code":"var _jsxFileName = \"C:\\\\Training\\\\React-and-ASP.NET-Core\\\\Module 6 - Forms\\\\react-movies\\\\src\\\\genres\\\\EditGenre.tsx\",\n  _s = $RefreshSig$();\nimport { useParams } from \"react-router-dom\";\nimport GenreForm from \"./GenreForm\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function EditGenre() {\n  _s();\n  const {\n    id\n  } = useParams();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Edit Genre\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GenreForm, {\n      model: {\n        name: 'Action'\n      },\n      onSubmit: async value => {\n        // when form is posted\n        await new Promise(r => setTimeout(r, 1000));\n        console.log(id);\n        console.log(value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(EditGenre, \"2iuhNW6CE75WTTBH924B2fZ53X0=\", false, function () {\n  return [useParams];\n});\n_c = EditGenre;\nvar _c;\n$RefreshReg$(_c, \"EditGenre\");","map":{"version":3,"names":["useParams","GenreForm","jsxDEV","_jsxDEV","Fragment","_Fragment","EditGenre","_s","id","children","fileName","_jsxFileName","lineNumber","columnNumber","model","name","onSubmit","value","Promise","r","setTimeout","console","log","_c","$RefreshReg$"],"sources":["C:/Training/React-and-ASP.NET-Core/Module 6 - Forms/react-movies/src/genres/EditGenre.tsx"],"sourcesContent":["import { useParams } from \"react-router-dom\"\r\nimport GenreForm from \"./GenreForm\";\r\n\r\nexport default function EditGenre() {\r\n    const {id}: any = useParams();\r\n\r\n    return (\r\n        <>\r\n            <h3>Edit Genre</h3>\r\n\r\n            <GenreForm model={{name: 'Action'}}\r\n                onSubmit={async value => {\r\n                    // when form is posted\r\n                    await new Promise(r => setTimeout(r, 1000));\r\n                    console.log(id);\r\n                    console.log(value);\r\n                }}\r\n            />\r\n        </>\r\n    )\r\n}"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEpC,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAChC,MAAM;IAACC;EAAO,CAAC,GAAGR,SAAS,CAAC,CAAC;EAE7B,oBACIG,OAAA,CAAAE,SAAA;IAAAI,QAAA,gBACIN,OAAA;MAAAM,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEnBV,OAAA,CAACF,SAAS;MAACa,KAAK,EAAE;QAACC,IAAI,EAAE;MAAQ,CAAE;MAC/BC,QAAQ,EAAE,MAAMC,KAAK,IAAI;QACrB;QACA,MAAM,IAAIC,OAAO,CAACC,CAAC,IAAIC,UAAU,CAACD,CAAC,EAAE,IAAI,CAAC,CAAC;QAC3CE,OAAO,CAACC,GAAG,CAACd,EAAE,CAAC;QACfa,OAAO,CAACC,GAAG,CAACL,KAAK,CAAC;MACtB;IAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA,eACJ,CAAC;AAEX;AAACN,EAAA,CAjBuBD,SAAS;EAAA,QACXN,SAAS;AAAA;AAAAuB,EAAA,GADPjB,SAAS;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}